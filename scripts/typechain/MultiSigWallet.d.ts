/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MultiSigWalletInterface extends ethers.utils.Interface {
  functions: {
    "addOwner(address)": FunctionFragment;
    "changeRequirement(uint256)": FunctionFragment;
    "confirmTransaction(uint256)": FunctionFragment;
    "executeTransaction(uint256)": FunctionFragment;
    "getConfirmationCount(uint256)": FunctionFragment;
    "getConfirmations(uint256)": FunctionFragment;
    "getOwners()": FunctionFragment;
    "getTransactionCount(bool,bool)": FunctionFragment;
    "getTransactionIds(uint256,uint256,bool,bool)": FunctionFragment;
    "isConfirmed(uint256)": FunctionFragment;
    "removeOwner(address)": FunctionFragment;
    "replaceOwner(address,address)": FunctionFragment;
    "revokeConfirmation(uint256)": FunctionFragment;
    "submitTransaction(address,uint256,bytes)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "changeRequirement",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "confirmTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "executeTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getConfirmationCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getConfirmations",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getOwners", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getTransactionCount",
    values: [boolean, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "getTransactionIds",
    values: [BigNumberish, BigNumberish, boolean, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "isConfirmed",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "removeOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "replaceOwner",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeConfirmation",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "submitTransaction",
    values: [string, BigNumberish, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "addOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeRequirement",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConfirmationCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConfirmations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOwners", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isConfirmed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "replaceOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeConfirmation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitTransaction",
    data: BytesLike
  ): Result;

  events: {
    "Confirmation(address,uint256)": EventFragment;
    "Deposit(address,uint256)": EventFragment;
    "Execution(uint256)": EventFragment;
    "ExecutionFailure(uint256)": EventFragment;
    "OwnerAddition(address)": EventFragment;
    "OwnerRemoval(address)": EventFragment;
    "RequirementChange(uint256)": EventFragment;
    "Revocation(address,uint256)": EventFragment;
    "Submission(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Confirmation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Deposit"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Execution"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExecutionFailure"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerAddition"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerRemoval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RequirementChange"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Revocation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Submission"): EventFragment;
}

export class MultiSigWallet extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MultiSigWalletInterface;

  functions: {
    addOwner(
      owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeRequirement(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeRequirement(uint256)"(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    confirmTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "confirmTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    executeTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "executeTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getConfirmationCount(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "getConfirmationCount(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getConfirmations(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "getConfirmations(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getOwners(overrides?: Overrides): Promise<ContractTransaction>;

    "getOwners()"(overrides?: Overrides): Promise<ContractTransaction>;

    getTransactionCount(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "getTransactionCount(bool,bool)"(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getTransactionIds(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "getTransactionIds(uint256,uint256,bool,bool)"(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isConfirmed(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "isConfirmed(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    removeOwner(
      owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    replaceOwner(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "replaceOwner(address,address)"(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    revokeConfirmation(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "revokeConfirmation(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    submitTransaction(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "submitTransaction(address,uint256,bytes)"(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addOwner(owner: string, overrides?: Overrides): Promise<ContractTransaction>;

  "addOwner(address)"(
    owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeRequirement(
    _required: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeRequirement(uint256)"(
    _required: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  confirmTransaction(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "confirmTransaction(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  executeTransaction(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "executeTransaction(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getConfirmationCount(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "getConfirmationCount(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getConfirmations(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "getConfirmations(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getOwners(overrides?: Overrides): Promise<ContractTransaction>;

  "getOwners()"(overrides?: Overrides): Promise<ContractTransaction>;

  getTransactionCount(
    pending: boolean,
    executed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "getTransactionCount(bool,bool)"(
    pending: boolean,
    executed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getTransactionIds(
    from: BigNumberish,
    to: BigNumberish,
    pending: boolean,
    executed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "getTransactionIds(uint256,uint256,bool,bool)"(
    from: BigNumberish,
    to: BigNumberish,
    pending: boolean,
    executed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isConfirmed(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "isConfirmed(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  removeOwner(
    owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeOwner(address)"(
    owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  replaceOwner(
    owner: string,
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "replaceOwner(address,address)"(
    owner: string,
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  revokeConfirmation(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "revokeConfirmation(uint256)"(
    transactionId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  submitTransaction(
    destination: string,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "submitTransaction(address,uint256,bytes)"(
    destination: string,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addOwner(owner: string, overrides?: CallOverrides): Promise<void>;

    "addOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeRequirement(
      _required: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeRequirement(uint256)"(
      _required: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    confirmTransaction(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "confirmTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    executeTransaction(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "executeTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getConfirmationCount(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConfirmationCount(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConfirmations(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getConfirmations(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getOwners(overrides?: CallOverrides): Promise<string[]>;

    "getOwners()"(overrides?: CallOverrides): Promise<string[]>;

    getTransactionCount(
      pending: boolean,
      executed: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTransactionCount(bool,bool)"(
      pending: boolean,
      executed: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactionIds(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getTransactionIds(uint256,uint256,bool,bool)"(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    isConfirmed(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isConfirmed(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    removeOwner(owner: string, overrides?: CallOverrides): Promise<void>;

    "removeOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    replaceOwner(
      owner: string,
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "replaceOwner(address,address)"(
      owner: string,
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeConfirmation(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "revokeConfirmation(uint256)"(
      transactionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    submitTransaction(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "submitTransaction(address,uint256,bytes)"(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    Confirmation(
      sender: string | null,
      transactionId: BigNumberish | null
    ): EventFilter;

    Deposit(sender: string | null, value: null): EventFilter;

    Execution(transactionId: BigNumberish | null): EventFilter;

    ExecutionFailure(transactionId: BigNumberish | null): EventFilter;

    OwnerAddition(owner: string | null): EventFilter;

    OwnerRemoval(owner: string | null): EventFilter;

    RequirementChange(required: null): EventFilter;

    Revocation(
      sender: string | null,
      transactionId: BigNumberish | null
    ): EventFilter;

    Submission(transactionId: BigNumberish | null): EventFilter;
  };

  estimateGas: {
    addOwner(owner: string, overrides?: Overrides): Promise<BigNumber>;

    "addOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeRequirement(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeRequirement(uint256)"(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    confirmTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "confirmTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    executeTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "executeTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getConfirmationCount(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "getConfirmationCount(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getConfirmations(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "getConfirmations(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getOwners(overrides?: Overrides): Promise<BigNumber>;

    "getOwners()"(overrides?: Overrides): Promise<BigNumber>;

    getTransactionCount(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "getTransactionCount(bool,bool)"(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getTransactionIds(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "getTransactionIds(uint256,uint256,bool,bool)"(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isConfirmed(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "isConfirmed(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    removeOwner(owner: string, overrides?: Overrides): Promise<BigNumber>;

    "removeOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    replaceOwner(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "replaceOwner(address,address)"(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    revokeConfirmation(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "revokeConfirmation(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    submitTransaction(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "submitTransaction(address,uint256,bytes)"(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addOwner(
      owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeRequirement(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeRequirement(uint256)"(
      _required: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    confirmTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "confirmTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    executeTransaction(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "executeTransaction(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getConfirmationCount(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "getConfirmationCount(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getConfirmations(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "getConfirmations(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getOwners(overrides?: Overrides): Promise<PopulatedTransaction>;

    "getOwners()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    getTransactionCount(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "getTransactionCount(bool,bool)"(
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getTransactionIds(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "getTransactionIds(uint256,uint256,bool,bool)"(
      from: BigNumberish,
      to: BigNumberish,
      pending: boolean,
      executed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isConfirmed(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "isConfirmed(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    removeOwner(
      owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeOwner(address)"(
      owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    replaceOwner(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "replaceOwner(address,address)"(
      owner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    revokeConfirmation(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "revokeConfirmation(uint256)"(
      transactionId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    submitTransaction(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "submitTransaction(address,uint256,bytes)"(
      destination: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
