/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewardsDistributionFake } from "../RewardsDistributionFake";

export class RewardsDistributionFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<RewardsDistributionFake> {
    return super.deploy(overrides || {}) as Promise<RewardsDistributionFake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardsDistributionFake {
    return super.attach(address) as RewardsDistributionFake;
  }
  connect(signer: Signer): RewardsDistributionFake__factory {
    return super.connect(signer) as RewardsDistributionFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsDistributionFake {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RewardsDistributionFake;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RewardDistributed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "addRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_perpToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "distributions",
    outputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "amount",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "editRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsController",
        type: "address",
      },
      {
        internalType: "contract IRewardRecipient",
        name: "_defaultRecipient",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "mock_setBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "mock_setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "removeRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052635611c230610133556127116101345534801561002057600080fd5b50611ad3806100306000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063715018a61161008c578063bb69b09311610066578063bb69b093146101b1578063bc5920ba146101c4578063c77f7c61146101cc578063d34d4c36146101e1576100e9565b8063715018a61461018e5780638da5cb5b146101965780639432665a1461019e576100e9565b80634487d3df116100c85780634487d3df14610129578063485cc955146101535780634e0888ce146101665780636c8381f814610179576100e9565b8062c141b6146100ee578063047709141461010357806313af403514610116575b600080fd5b6101016100fc366004611511565b6101f4565b005b610101610111366004611541565b6101fa565b610101610124366004611468565b6102dd565b61013c610137366004611511565b6103b6565b60405161014a9291906115af565b60405180910390f35b610101610161366004611484565b6103f6565b6101016101743660046114bc565b6104b3565b6101816105d3565b60405161014a919061159b565b6101016105e2565b610181610661565b6101016101ac366004611511565b610670565b6101016101bf366004611511565b610676565b61010161078f565b6101d4610852565b60405161014a9190611a45565b6101016101ef3660046114bc565b610861565b61013455565b610202610bbf565b6065546001600160a01b039081169116146102385760405162461bcd60e51b815260040161022f90611971565b60405180910390fd5b6101005415801590610251575061010054600019018311155b61026d5760405162461bcd60e51b815260040161022f906119be565b81610100848154811061027c57fe5b906000526020600020906002020160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508061010084815481106102c057fe5b600091825260209091209151600160029092029092010155505050565b6102e5610bbf565b6065546001600160a01b039081169116146103125760405162461bcd60e51b815260040161022f90611971565b6001600160a01b0381166103385760405162461bcd60e51b815260040161022f90611820565b6065546001600160a01b03828116911614156103665760405162461bcd60e51b815260040161022f906119eb565b6066546001600160a01b03828116911614156103945760405162461bcd60e51b815260040161022f906116e7565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61010081815481106103c457fe5b6000918252602091829020600290910201805460408051938401905260019091015482526001600160a01b0316915082565b600054610100900460ff168061040f575061040f610bc3565b8061041d575060005460ff16155b6104395760405162461bcd60e51b815260040161022f90611862565b600054610100900460ff16158015610464576000805460ff1961ff0019909116610100171660011790555b61046c610bc9565b60fe80546001600160a01b038086166001600160a01b03199283161790925560ff80549285169290911691909117905580156104ae576000805461ff00191690555b505050565b6104bb610bbf565b6065546001600160a01b039081169116146104e85760405162461bcd60e51b815260040161022f90611971565b6001600160a01b03821661050e5760405162461bcd60e51b815260040161022f906116b0565b61051781610c5c565b6105335760405162461bcd60e51b815260040161022f906118b0565b61053b6113f0565b50604080518082019091526001600160a01b03928316815260208101918252610100805460018101825560009190915290517f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87b600290920291820180546001600160a01b031916919094161790925551517f45e010b9ae401e2eb71529478da8bd513a9bdc2d095a111e324f5b95c09ed87c90910155565b6066546001600160a01b031690565b6105ea610bbf565b6065546001600160a01b039081169116146106175760405162461bcd60e51b815260040161022f90611971565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6065546001600160a01b031690565b61013355565b61067e610bbf565b6065546001600160a01b039081169116146106ab5760405162461bcd60e51b815260040161022f90611971565b61010054158015906106c4575061010054600019018111155b6106e05760405162461bcd60e51b815260040161022f906119be565b6101005460001901811015610757576101008054600019810190811061070257fe5b9060005260206000209060020201610100828154811061071e57fe5b60009182526020909120825460029092020180546001600160a01b0319166001600160a01b039092169190911781556001918201549101555b61010080548061076357fe5b60008281526020812060026000199093019283020180546001600160a01b031916815560010155905550565b6066546001600160a01b03166107b75760405162461bcd60e51b815260040161022f90611922565b6107bf610bbf565b6066546001600160a01b039081169116146107ec5760405162461bcd60e51b815260040161022f9061172e565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b600061085c610c60565b905090565b60fe546001600160a01b0316610875610bbf565b6001600160a01b03161461089b5760405162461bcd60e51b815260040161022f90611615565b6108a481610c5c565b6108b66108b18430610c67565b610c5c565b10156108d45760405162461bcd60e51b815260040161022f906117b6565b6108dc611418565b508060005b61010054811015610af45760006001600160a01b0316610100828154811061090557fe5b60009182526020909120600290910201546001600160a01b031614801590610961575061095e610100828154811061093957fe5b6000918252602091829020604080519384019052600160029092020101548152610c5c565b15155b15610aec576109a4610100828154811061097757fe5b6000918252602091829020604080519384019052600160029092020101548152839063ffffffff610cfd16565b9150610a098461010083815481106109b857fe5b600091825260209091206002909102015461010080546001600160a01b0390921691859081106109e457fe5b6000918252602091829020604080519384019052600160029092020101548152610d29565b60606101008281548110610a1957fe5b9060005260206000209060020201600101604051602401610a3a9190611a3b565b60408051601f198184030181529190526020810180516001600160e01b0316633c6b16ab60e01b179052610100805491925060009184908110610a7957fe5b60009182526020909120600290910201546040516001600160a01b0390911690610aa490849061157f565b6000604051808303816000865af19150503d8060008114610ae1576040519150601f19603f3d011682016040523d82523d6000602084013e610ae6565b606091505b50505050505b6001016108e1565b5060ff54610b0d9084906001600160a01b031683610d29565b60ff54604051600162a6079360e01b031981526001600160a01b039091169063ff59f86d90610b40908490600401611a31565b600060405180830381600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505050507feaf3d57629d9b1ce95715ccd98d6f5bf48023be1d5a06e09f64ab7f6d8be01d5610b9c83610c5c565b610ba4610c60565b604051610bb2929190611a4e565b60405180910390a1505050565b3390565b303b1590565b600054610100900460ff1680610be25750610be2610bc3565b80610bf0575060005460ff16155b610c0c5760405162461bcd60e51b815260040161022f90611862565b600054610100900460ff16158015610c37576000805460ff1961ff0019909116610100171660011790555b610c3f610e58565b610c47610ed9565b8015610c59576000805461ff00191690555b50565b5190565b6101335490565b610c6f611418565b610cf483846001600160a01b03166370a08231856040518263ffffffff1660e01b8152600401610c9f919061159b565b60206040518083038186803b158015610cb757600080fd5b505afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611529565b610fb3565b90505b92915050565b610d05611418565b610d0d611418565b82518451610d209163ffffffff61104516565b81529392505050565b610d3283611087565b610d3a611418565b610d448484610c67565b90506000610d5285846110d4565b905060006060866001600160a01b031663a9059cbb60e01b8785604051602401610d7d9291906115c9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610dbb919061157f565b6000604051808303816000865af19150503d8060008114610df8576040519150601f19603f3d011682016040523d82523d6000602084013e610dfd565b606091505b5091509150818015610e27575080511580610e27575080806020019051810190610e2791906114f1565b610e435760405162461bcd60e51b815260040161022f90611642565b610e4f87878587611152565b50505050505050565b600054610100900460ff1680610e715750610e71610bc3565b80610e7f575060005460ff16155b610e9b5760405162461bcd60e51b815260040161022f90611862565b600054610100900460ff16158015610c47576000805460ff1961ff0019909116610100171660011790558015610c59576000805461ff001916905550565b600054610100900460ff1680610ef25750610ef2610bc3565b80610f00575060005460ff16155b610f1c5760405162461bcd60e51b815260040161022f90611862565b600054610100900460ff16158015610f47576000805460ff1961ff0019909116610100171660011790555b6000610f51610bbf565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610c59576000805461ff001916905550565b610fbb611418565b6000610fc6846111ab565b90506012811061100b57604080516020810190915280611000610ff084601263ffffffff61104516565b8690600a0a63ffffffff61129816565b815250915050610cf7565b60408051602081019091528061103b61102b60128563ffffffff61104516565b8690600a0a63ffffffff6112da16565b9052949350505050565b6000610cf483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611314565b6000611092826111ab565b6001600160a01b038316600090815260cb602052604090205490915081146110d0576001600160a01b038216600090815260cb602052604090208190555b5050565b6000806110e0846111ab565b90506012811061111e576111166110fe82601263ffffffff61104516565b600a0a61110a85610c5c565b9063ffffffff6112da16565b915050610cf7565b61114a61113260128363ffffffff61104516565b600a0a61113e85610c5c565b9063ffffffff61129816565b949350505050565b61118561116f6111628685610fb3565b839063ffffffff61134016565b6111798686610c67565b9063ffffffff61136316565b60000b156111a55760405162461bcd60e51b815260040161022f906118e0565b50505050565b6001600160a01b038116600090815260cb602052604081205480610cf75760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000916060916001600160a01b0387169161120d9161157f565b600060405180830381855afa9150503d8060008114611248576040519150601f19603f3d011682016040523d82523d6000602084013e61124d565b606091505b509150915081801561125f5750805115155b61127b5760405162461bcd60e51b815260040161022f90611775565b8080602001905181019061128f9190611529565b95945050505050565b6000610cf483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611394565b6000826112e957506000610cf7565b828202828482816112f657fe5b0414610cf45760405162461bcd60e51b815260040161022f906117df565b600081848411156113385760405162461bcd60e51b815260040161022f91906115e2565b505050900390565b611348611418565b611350611418565b82518451610d209163ffffffff6113cb16565b80518251600091101561137857506001610cf7565b81518351101561138b5750600019610cf7565b50600092915050565b600081836113b55760405162461bcd60e51b815260040161022f91906115e2565b5060008385816113c157fe5b0495945050505050565b600082820183811015610cf45760405162461bcd60e51b815260040161022f90611679565b604051806040016040528060006001600160a01b03168152602001611413611418565b905290565b6040518060200160405280600081525090565b60006020828403121561143c578081fd5b6040516020810181811067ffffffffffffffff8211171561145b578283fd5b6040529135825250919050565b600060208284031215611479578081fd5b8135610cf481611a88565b60008060408385031215611496578081fd5b82356114a181611a88565b915060208301356114b181611a88565b809150509250929050565b600080604083850312156114ce578182fd5b82356114d981611a88565b91506114e8846020850161142b565b90509250929050565b600060208284031215611502578081fd5b81518015158114610cf4578182fd5b600060208284031215611522578081fd5b5035919050565b60006020828403121561153a578081fd5b5051919050565b600080600060608486031215611555578081fd5b83359250602084013561156781611a88565b9150611576856040860161142b565b90509250925092565b60008251611591818460208701611a5c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392909216825251602082015260400190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152611601816040850160208701611a5c565b601f01601f19169190910160400192915050565b60208082526013908201527210afb932bbb0b93239a1b7b73a3937b63632b960691b604082015260600190565b6020808252601d908201527f446563696d616c45524332303a207472616e73666572206661696c6564000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526017908201527f43616e74206164642061207a65726f2061646472657373000000000000000000604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b60208082526021908201527f446563696d616c45524332303a2067657420646563696d616c73206661696c656040820152601960fa1b606082015260800190565b6020808252600f908201526e06e6f7420656e6f756768205045525608c1b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526016908201527510d85b9d081859190818481e995c9bc8185b5bdd5b9d60521b604082015260600190565b60208082526022908201527f446563696d616c45524332303a2062616c616e636520696e636f6e73697374656040820152611b9d60f21b606082015260800190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b602080825260139082015272696e646578206f7574206f6620626f756e647360681b604082015260600190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b9051815260200190565b9054815260200190565b90815260200190565b918252602082015260400190565b60005b83811015611a77578181015183820152602001611a5f565b838111156111a55750506000910152565b6001600160a01b0381168114610c5957600080fdfea2646970667358221220deffb4973ea721bdd26539790c69dbb0b7e6d71f0311d4f3ac4ce19290c2b9f264736f6c63430006090033";
