/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { L2PriceFeedMock } from "../L2PriceFeedMock";

export class L2PriceFeedMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _price: BigNumberish,
    overrides?: Overrides
  ): Promise<L2PriceFeedMock> {
    return super.deploy(_price, overrides || {}) as Promise<L2PriceFeedMock>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): L2PriceFeedMock {
    return super.attach(address) as L2PriceFeedMock;
  }
  connect(signer: Signer): L2PriceFeedMock__factory {
    return super.connect(signer) as L2PriceFeedMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2PriceFeedMock {
    return new Contract(address, _abi, signerOrProvider) as L2PriceFeedMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "PriceFeedDataSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getTwapPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_priceFeedKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_roundId",
        type: "uint256",
      },
    ],
    name: "setLatestData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTwapPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102013803806102018339818101604052602081101561003357600080fd5b505160008190556001556101b58061004c6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063031d64bd1461005c57806331d98b3f1461008d57806335acc2c4146100bc57806391b7f5ed146100d9578063a2173df4146100f6575b600080fd5b61008b6004803603608081101561007257600080fd5b5080359060208101359060408101359060600135610119565b005b6100aa600480360360208110156100a357600080fd5b5035610166565b60408051918252519081900360200190f35b61008b600480360360208110156100d257600080fd5b503561016d565b61008b600480360360208110156100ef57600080fd5b5035610172565b6100aa6004803603604081101561010c57600080fd5b5080359060200135610177565b60408051858152602081018590528082018490526060810183905290517fb3b3d4e42c62d694318e0149f90ed0f2e7be9757332da15fd55ae5a01d41722c9181900360800190a150505050565b5060005490565b600155565b600055565b50506001549056fea264697066735822122060b007b917db82cece6067b5979d7840adfccdf47af9ac0205da978a2b42bca064736f6c63430006090033";
