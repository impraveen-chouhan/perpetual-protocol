/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakedPerpTokenMock } from "../StakedPerpTokenMock";

export class StakedPerpTokenMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StakedPerpTokenMock> {
    return super.deploy(overrides || {}) as Promise<StakedPerpTokenMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakedPerpTokenMock {
    return super.attach(address) as StakedPerpTokenMock;
  }
  connect(signer: Signer): StakedPerpTokenMock__factory {
    return super.connect(signer) as StakedPerpTokenMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedPerpTokenMock {
    return new Contract(address, _abi, signerOrProvider) as StakedPerpTokenMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "mock_setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "mock_setTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101dc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806318160ddd1461005c578063450ceca71461007a57806370a082311461008f578063b42e3161146100a2578063e3d670d7146100b5575b600080fd5b6100646100c8565b604051610071919061019d565b60405180910390f35b61008d61008836600461015b565b6100ce565b005b61006461009d366004610139565b6100ea565b61008d6100b0366004610185565b610105565b6100646100c3366004610139565b61010a565b60005481565b6001600160a01b03909116600090815260016020526040902055565b6001600160a01b031660009081526001602052604090205490565b600055565b60016020526000908152604090205481565b80356001600160a01b038116811461013357600080fd5b92915050565b60006020828403121561014a578081fd5b610154838361011c565b9392505050565b6000806040838503121561016d578081fd5b610177848461011c565b946020939093013593505050565b600060208284031215610196578081fd5b5035919050565b9081526020019056fea26469706673582212206020cecfa3d4f5ef1d56079f387498bcaf82679a39db026d944beca8d83398fc64736f6c63430006090033";
