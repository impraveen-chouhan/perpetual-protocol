/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BytesLike, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AmmFake } from "../AmmFake";

export class AmmFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _dcQuoteAssetReserve: BigNumberish,
    _dcBaseAssetReserve: BigNumberish,
    _dcTradeLimitRatio: BigNumberish,
    _fundingPeriod: BigNumberish,
    _priceFeed: string,
    _priceFeedKey: BytesLike,
    _quoteAsset: string,
    _fluctuation: BigNumberish,
    _tollRatio: BigNumberish,
    _spreadRatio: BigNumberish,
    overrides?: Overrides
  ): Promise<AmmFake> {
    return super.deploy(
      _dcQuoteAssetReserve,
      _dcBaseAssetReserve,
      _dcTradeLimitRatio,
      _fundingPeriod,
      _priceFeed,
      _priceFeedKey,
      _quoteAsset,
      _fluctuation,
      _tollRatio,
      _spreadRatio,
      overrides || {}
    ) as Promise<AmmFake>;
  }
  getDeployTransaction(
    _dcQuoteAssetReserve: BigNumberish,
    _dcBaseAssetReserve: BigNumberish,
    _dcTradeLimitRatio: BigNumberish,
    _fundingPeriod: BigNumberish,
    _priceFeed: string,
    _priceFeedKey: BytesLike,
    _quoteAsset: string,
    _fluctuation: BigNumberish,
    _tollRatio: BigNumberish,
    _spreadRatio: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _dcQuoteAssetReserve,
      _dcBaseAssetReserve,
      _dcTradeLimitRatio,
      _fundingPeriod,
      _priceFeed,
      _priceFeedKey,
      _quoteAsset,
      _fluctuation,
      _tollRatio,
      _spreadRatio,
      overrides || {}
    );
  }
  attach(address: string): AmmFake {
    return super.attach(address) as AmmFake;
  }
  connect(signer: Signer): AmmFake__factory {
    return super.connect(signer) as AmmFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AmmFake {
    return new Contract(address, _abi, signerOrProvider) as AmmFake;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dcQuoteAssetReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dcBaseAssetReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dcTradeLimitRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fundingPeriod",
        type: "uint256",
      },
      {
        internalType: "contract IPriceFeed",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_priceFeedKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fluctuation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tollRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spreadRatio",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxHoldingBaseAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "openInterestNotionalCap",
        type: "uint256",
      },
    ],
    name: "CapChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "rate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingPrice",
        type: "uint256",
      },
    ],
    name: "FundingRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "cumulativeNotional",
        type: "int256",
      },
    ],
    name: "LiquidityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    name: "PriceFeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAssetReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAssetReserve",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ReserveSnapshotted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "settlementPrice",
        type: "uint256",
      },
    ],
    name: "Shutdown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IAmm.Dir",
        name: "dir",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAssetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAssetAmount",
        type: "uint256",
      },
    ],
    name: "SwapInput",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IAmm.Dir",
        name: "dir",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAssetAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAssetAmount",
        type: "uint256",
      },
    ],
    name: "SwapOutput",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_ORACLE_SPREAD_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAssetReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_fromQuoteReserve",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_fromBaseReserve",
        type: "tuple",
      },
    ],
    name: "calcBaseAssetAfterLiquidityMigration",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fluctuationLimitRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingBufferPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingRate",
    outputs: [
      {
        internalType: "int256",
        name: "d",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseAssetDelta",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseAssetDeltaThisFundingPeriod",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCumulativeNotional",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfQuote",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
    ],
    name: "getInputPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfQuote",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetPoolAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetPoolAmount",
        type: "tuple",
      },
    ],
    name: "getInputPriceWithReserves",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dir",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetPoolAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetPoolAmount",
        type: "tuple",
      },
    ],
    name: "getInputPriceWithReservesPublic",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfQuote",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
    ],
    name: "getInputTwap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestLiquidityChangedSnapshots",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "d",
                type: "int256",
              },
            ],
            internalType: "struct SignedDecimal.signedDecimal",
            name: "cumulativeNotional",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "quoteAssetReserve",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "baseAssetReserve",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "d",
                type: "int256",
              },
            ],
            internalType: "struct SignedDecimal.signedDecimal",
            name: "totalPositionSize",
            type: "tuple",
          },
        ],
        internalType: "struct IAmm.LiquidityChangedSnapshot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getLiquidityChangedSnapshots",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "d",
                type: "int256",
              },
            ],
            internalType: "struct SignedDecimal.signedDecimal",
            name: "cumulativeNotional",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "quoteAssetReserve",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "baseAssetReserve",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "d",
                type: "int256",
              },
            ],
            internalType: "struct SignedDecimal.signedDecimal",
            name: "totalPositionSize",
            type: "tuple",
          },
        ],
        internalType: "struct IAmm.LiquidityChangedSnapshot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiquidityHistoryLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxHoldingBaseAsset",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenInterestNotionalCap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfBase",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
    ],
    name: "getOutputPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfBase",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetPoolAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetPoolAmount",
        type: "tuple",
      },
    ],
    name: "getOutputPriceWithReserves",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dir",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetPoolAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetPoolAmount",
        type: "tuple",
      },
    ],
    name: "getOutputPriceWithReservesPublic",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfBase",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
    ],
    name: "getOutputTwap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserve",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSettlementPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSnapshotLen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSpotPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_intervalInSeconds",
        type: "uint256",
      },
    ],
    name: "getTwapPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_intervalInSeconds",
        type: "uint256",
      },
    ],
    name: "getUnderlyingTwapPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalShutdown",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quoteAssetReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_baseAssetReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeLimitRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fundingPeriod",
        type: "uint256",
      },
      {
        internalType: "contract IPriceFeed",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_priceFeedKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fluctuationLimitRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tollRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spreadRatio",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfBase",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
    ],
    name: "isOverFluctuationLimit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOverSpreadLimit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteReserve",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseReserve",
        type: "tuple",
      },
    ],
    name: "mockSetReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "mock_setBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "mock_setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextFundingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "open",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteAssetReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "reserveSnapshots",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "quoteAssetReserve",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "baseAssetReserve",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_maxHoldingBaseAsset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_openInterestNotionalCap",
        type: "tuple",
      },
    ],
    name: "setCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_counterParty",
        type: "address",
      },
    ],
    name: "setCounterParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_fluctuationLimitRatio",
        type: "tuple",
      },
    ],
    name: "setFluctuationLimitRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_globalShutdown",
        type: "address",
      },
    ],
    name: "setGlobalShutdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_open",
        type: "bool",
      },
    ],
    name: "setOpen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceFeed",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
    ],
    name: "setSpotPriceTwapInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_spreadRatio",
        type: "tuple",
      },
    ],
    name: "setSpreadRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_tollRatio",
        type: "tuple",
      },
    ],
    name: "setTollRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settleFunding",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shutdown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spotPriceTwapInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spreadRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfQuote",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmountLimit",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "_canOverFluctuationLimit",
        type: "bool",
      },
    ],
    name: "swapInput",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IAmm.Dir",
        name: "_dirOfBase",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmountLimit",
        type: "tuple",
      },
    ],
    name: "swapOutput",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tollAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tollRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPositionSize",
    outputs: [
      {
        internalType: "int256",
        name: "d",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeLimitRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052635611c23061011755612711610118553480156200002157600080fd5b5060405162004f6438038062004f648339810160408190526200004491620007ae565b620000638a8a8a8a8a8a8a8a8a8a6200007360201b620011501760201c565b5050505050505050505062000932565b600054610100900460ff1680620000985750620000986001600160e01b036200045516565b80620000a7575060005460ff16155b620000cf5760405162461bcd60e51b8152600401620000c69062000891565b60405180910390fd5b600054610100900460ff16158015620000fb576000805460ff1961ff0019909116610100171660011790555b8a158015906200010a57508815155b80156200011657508915155b80156200012257508715155b80156200013757506001600160a01b03871615155b80156200014c57506001600160a01b03851615155b6200016b5760405162461bcd60e51b8152600401620000c690620008df565b6200017e6001600160e01b036200045b16565b6040805160208082018352908d905260d18d9055815180820183528c905260d28c9055815180820183528b905260d08b90558151808201835285905260d48590558151808201835284905260d584905581518082019092529085905260d385905560dc899055620001fd9089906002906200212062000516821b17901c565b60dd55610e1060db5560df86905560e380546001600160a01b03199081166001600160a01b038881169190911790925560e480549091169189169190911790556200025362000567602090811b6200216217901c565b5160d955604080516080810190915260da90806200027c6200059a602090811b6200217f17901c565b8152604080516020818101835260d1548252808401919091528151808201835260d254815291830191909152606090910190620002c2906200217f6200059a821b17901c565b9052815460018181018455600093845260209384902083515160049093020191825583830151519082015560408083015151600283015560609092015151600390910155805160a08101825260d1546080820190815281528151808401835260d25481529281019290925260e091908101620003466001600160e01b03620005b716565b81526020016200035e6001600160e01b03620005be16565b905281546001818101845560009384526020938490208351516004909302019182558383015151908201556040808301516002830155606090920151600390910155805180830190915260d15481527f3a3348362552c3897fd1f06a3233519ebd8bd76ad6e99a418a9741155fe9051591620003e491906200219a620005c5821b17901c565b60408051602080820190925260d254815262000409916200219a620005c5821b17901c565b6200041c6001600160e01b03620005b716565b6040516200042d9392919062000906565b60405180910390a1801562000448576000805461ff00191690555b5050505050505050505050565b303b1590565b600054610100900460ff1680620004805750620004806001600160e01b036200045516565b806200048f575060005460ff16155b620004ae5760405162461bcd60e51b8152600401620000c69062000891565b600054610100900460ff16158015620004da576000805460ff1961ff0019909116610100171660011790555b620004ed6001600160e01b03620005c916565b620005006001600160e01b036200065c16565b801562000513576000805461ff00191690555b50565b60006200056083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506200075360201b60201c565b9392505050565b620005716200079b565b60405180602001604052806200059360126200078e60201b6200219e1760201c565b9052905090565b620005a46200079b565b5060408051602081019091526000815290565b6101175490565b6101185490565b5190565b600054610100900460ff1680620005ee5750620005ee6001600160e01b036200045516565b80620005fd575060005460ff16155b6200061c5760405162461bcd60e51b8152600401620000c69062000891565b600054610100900460ff1615801562000500576000805460ff1961ff001990911661010017166001179055801562000513576000805461ff001916905550565b600054610100900460ff1680620006815750620006816001600160e01b036200045516565b8062000690575060005460ff16155b620006af5760405162461bcd60e51b8152600401620000c69062000891565b600054610100900460ff16158015620006db576000805460ff1961ff0019909116610100171660011790555b6000620006f06001600160e01b036200079716565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801562000513576000805461ff001916905550565b60008183620007775760405162461bcd60e51b8152600401620000c691906200083b565b5060008385816200078457fe5b0495945050505050565b60ff16600a0a90565b3390565b6040518060200160405280600081525090565b6000806000806000806000806000806101408b8d031215620007ce578586fd5b8a51995060208b0151985060408b0151975060608b0151965060808b0151620007f7816200091c565b60a08c015160c08d0151919750955062000811816200091c565b8094505060e08b015192506101008b015191506101208b015190509295989b9194979a5092959850565b6000602080835283518082850152825b8181101562000869578581018301518582016040015282016200084b565b818111156200087b5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600d908201526c1a5b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b9283526020830191909152604082015260600190565b6001600160a01b03811681146200051357600080fd5b61462280620009426000396000f3fe608060405234801561001057600080fd5b506004361061041c5760003560e01c80636c8381f81161022b578063b2ed32c711610130578063e1f1027f116100b8578063ed83d79c11610087578063ed83d79c146107e5578063f1b5df86146107ed578063fc0e74d114610800578063fcfff16f14610808578063fdf262b7146108105761041c565b8063e1f1027f146107ba578063e4bc2eb9146107cd578063e805d6fc146107d5578063ec2c0e63146107dd5761041c565b8063c9566fcc116100ff578063c9566fcc1461077c578063d71ec2ad14610784578063da0c592714610797578063dc76fabc146107aa578063e0037a6c146107b25761041c565b8063b2ed32c714610751578063bc5920ba14610764578063c2de442f1461076c578063c77f7c61146107745761041c565b80637ec3246d116101b35780639bf5d1d4116101825780639bf5d1d4146106fd5780639e010362146107105780639ece77c814610718578063a8f8be4e1461072b578063ad6891211461073e5761041c565b80637ec3246d146106c75780638da5cb5b146106da5780638f40d932146106e25780639432665a146106ea5761041c565b8063715018a6116101fa578063715018a614610689578063724e78da14610691578063741bef1a146106a457806374d7c62b146106ac57806375df6389146106b45761041c565b80636c8381f8146106535780636fa42ede1461065b5780636fdca5e01461066e5780636febdd50146106815761041c565b806340d71cd91161033157806354e636c5116102b9578063620be06711610288578063620be067146105ff578063622679551461061257806362e7a17614610625578063644dce1f146106385780636baccaba1461064b5761041c565b806354e636c5146105c657806358a4c3dc146105d957806359bf5d39146105e15780635f1ba1fd146105f75761041c565b80634894d183116103005780634894d1831461057d5780634cb876f21461059057806350799c8114610598578063524f15a1146105ab57806352545410146105be5761041c565b806340d71cd91461055257806341d3c84c1461056557806342b3198b1461056d578063468f02d2146105755761041c565b806313af4035116103b4578063237f17ee11610383578063237f17ee1461051457806329f9b17b146105275780632d666e381461052f5780632f84885914610537578063349532491461053f5761041c565b806313af4035146104c15780631b584d6c146104d45780631d3acb44146104e957806321e00985146104f15761041c565b80630d451c8f116103f05780630d451c8f146104715780630dd68c7014610479578063113773941461048c578063130234cf146104a15761041c565b8062c141b6146104215780630244accf1461043657806305172a25146104545780630933838314610469575b600080fd5b61043461042f366004613bff565b610818565b005b61043e61081e565b60405161044b9190613cb6565b60405180910390f35b61045c61082d565b60405161044b9190613cd5565b61045c610839565b61045c610848565b610434610487366004613b94565b61084e565b610494610904565b60405161044b9190614517565b6104b46104af366004613ad1565b610920565b60405161044b9190613cca565b6104346104cf3660046139f7565b610a85565b6104dc610b5e565b60405161044b91906144e8565b61045c610bec565b6105046104ff366004613bff565b610bf2565b60405161044b9493929190614531565b6104dc610522366004613bff565b610c40565b610494610ce0565b61045c610cfc565b610494610d02565b61049461054d366004613bff565b610d1e565b610494610560366004613bb0565b610dbd565b61045c610e79565b61045c610e7f565b610494610e85565b61049461058b366004613ad1565b610f22565b61045c610f39565b6104946105a6366004613b06565b610f3f565b6104346105b9366004613b79565b6110b0565b6104946110eb565b6104346105d4366004613b94565b611107565b61045c611112565b6105e9611118565b60405161044b929190614521565b61045c61114a565b61043461060d366004613c2f565b611150565b6105e9610620366004613b5e565b61148f565b610434610633366004613bff565b61152a565b610494610646366004613b06565b611581565b61045c61159e565b61043e6115a4565b610494610669366004613ad1565b6115b3565b61043461067c366004613a13565b6115ca565b61045c611684565b61043461168a565b61043461069f3660046139f7565b611709565b61043e6117c0565b61045c6117cf565b6104946106c2366004613a78565b6117d5565b6104346106d5366004613b79565b611a03565b61043e611a3e565b61045c611a4d565b6104346106f8366004613bff565b611a53565b61049461070b366004613b06565b611a59565b6104b4611b37565b6104346107263660046139f7565b611be5565b610434610739366004613b79565b611c3c565b61049461074c366004613b06565b611c77565b61043461075f3660046139f7565b611c8b565b610434611ce2565b61045c611da5565b61045c611dab565b61045c611db5565b610494610792366004613a2f565b611dbb565b6104946107a5366004613ad1565b611e48565b610494611e7a565b61045c611eaf565b6104946107c8366004613ad1565b611eb5565b61045c611ee7565b610494611eed565b610494611f09565b610494611f25565b6104946107fb366004613bff565b612082565b610434612093565b6104b4612101565b61043e612111565b61011855565b60e2546001600160a01b031681565b67016345785d8a000081565b60006108436121a7565b905090565b60e05490565b6108566121ae565b6065546001600160a01b0390811691161461088c5760405162461bcd60e51b815260040161088390614420565b60405180910390fd5b815160d7819055815160d85560408051602081019091529081527f7338f3784ceb8f9456bac0c4a69f1c6354dc325fa6455e3e3f6a8a9bf9249a7c906108d19061219a565b604080516020810190915260d85481526108ea9061219a565b6040516108f8929190613cde565b60405180910390a15050565b61090c6138f1565b50604080516020810190915260d754815290565b604080516020810190915260d354815260009061093c9061219a565b61094857506000610a7f565b6109506138f1565b6109586138f1565b6109606121b2565b9150915061096c6138f1565b6109768686611e48565b90506109806138f1565b600187600181111561098e57fe5b146109e857604080516020810190915260d25481526109e3906109b7908863ffffffff61237f16565b604080516020810190915260d15481526109d7908563ffffffff6123ab16565b9063ffffffff6123ce16565b610a2c565b604080516020810190915260d2548152610a2c90610a0c908863ffffffff6123ab16565b604080516020810190915260d15481526109d7908563ffffffff61237f16565b90506000610a40828663ffffffff6123f116565b60000b13158015610a6457506000610a5e828563ffffffff6123f116565b60000b12155b15610a76576000945050505050610a7f565b60019450505050505b92915050565b610a8d6121ae565b6065546001600160a01b03908116911614610aba5760405162461bcd60e51b815260040161088390614420565b6001600160a01b038116610ae05760405162461bcd60e51b815260040161088390614183565b6065546001600160a01b0382811691161415610b0e5760405162461bcd60e51b8152600401610883906144a2565b6066546001600160a01b0382811691161415610b3c5760405162461bcd60e51b815260040161088390613eaa565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b610b66613904565b60da8054610b7b90600163ffffffff61242216565b81548110610b8557fe5b60009182526020918290206040805160a0810182526004909302909101805460808401908152835281518085018352600182015481528385015281518085018352600282015481528383015281519384019091526003015482526060810191909152905090565b60d35481565b60e08181548110610bff57fe5b600091825260209182902060408051808501825260049093029091018054835281519384019091526001810154835260028101546003909101549193509084565b610c48613904565b60da548210610c695760405162461bcd60e51b815260040161088390613fa5565b60da8281548110610c7657fe5b60009182526020918290206040805160a081018252600490930290910180546080840190815283528151808501835260018201548152838501528151808501835260028201548152838301528151938401909152600301548252606081019190915290505b919050565b610ce86138f1565b50604080516020810190915260ce54815290565b60d65481565b610d0a6138f1565b50604080516020810190915260cc54815290565b610d266138f1565b60408051602081019182905260e45460df54632885cf7d60e21b909352909182916001600160a01b03169063a2173df490610d65908760248601613cde565b60206040518083038186803b158015610d7d57600080fd5b505afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db59190613c17565b905292915050565b610dc56138f1565b610dce84612464565b610dd9575082610e72565b600080610de58661219a565b13610df1576000610df4565b60015b9050610dfe6138f1565b610e2082610e0d576001610e10565b60005b610e1988612476565b8787611a59565b9050610e2a6138f1565b610e4a610e4584610e3c576000610e3f565b60015b84611eb5565b6124a4565b9050610e6c83610e5c57600019610e5f565b60015b829063ffffffff61250816565b93505050505b9392505050565b60cd5481565b60da5490565b610e8d6138f1565b60408051602081019182905260e45460df546331d98b3f60e01b909352909182916001600160a01b0316906331d98b3f90610ecb9060248501613cd5565b60206040518083038186803b158015610ee357600080fd5b505afa158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190613c17565b9052905090565b610f2a6138f1565b610e728383600061038461252a565b60cc5481565b610f476138f1565b610f508461219a565b610f6357610f5c61217f565b90506110a8565b600080866001811115610f7257fe5b149050610f7d6138f1565b610f90610e45868663ffffffff6125b016565b9050610f9a6138f1565b610fa26138f1565b610faa6138f1565b8415610fc757610fc0888a63ffffffff61237f16565b9150610fda565b610fd7888a63ffffffff6123ab16565b91505b610fe38261219a565b610fff5760405162461bcd60e51b8152600401610883906142ff565b61100f848363ffffffff6125d316565b9250611029611024848963ffffffff61264416565b612476565b905061104c6110478361103b87612476565b9063ffffffff6126b916565b61219a565b156110a157841561107e5760408051602081019091526001815261107790829063ffffffff6123ab16565b90506110a1565b60408051602081019091526001815261109e90829063ffffffff61237f16565b90505b9450505050505b949350505050565b6110b86121ae565b6065546001600160a01b039081169116146110e55760405162461bcd60e51b815260040161088390614420565b5160d555565b6110f36138f1565b50604080516020810190915260d854815290565b905160d1555160d255565b60df5481565b6111206138f1565b6111286138f1565b5050604080516020808201835260d1548252825190810190925260d254825291565b60db5481565b600054610100900460ff168061116957506111696126fd565b80611177575060005460ff16155b6111935760405162461bcd60e51b8152600401610883906141c5565b600054610100900460ff161580156111be576000805460ff1961ff0019909116610100171660011790555b8a158015906111cc57508815155b80156111d757508915155b80156111e257508715155b80156111f657506001600160a01b03871615155b801561120a57506001600160a01b03851615155b6112265760405162461bcd60e51b815260040161088390614366565b61122e612703565b6040805160208082018352908d905260d18d9055815180820183528c905260d28c9055815180820183528b905260d08b90558151808201835285905260d48590558151808201835284905260d5849055815190810190915284905260d384905560dc8890556112a488600263ffffffff61212016565b60dd55610e1060db5560df86905560e380546001600160a01b038088166001600160a01b03199283161790925560e48054928a16929091169190911790556112ea612162565b5160d955604080516080810190915260da908061130561217f565b8152604080516020818101835260d1548252808401919091528151908101825260d25481529082015260600161133961217f565b9052815460018181018455600093845260209384902083515160049093020191825583830151519082015560408083015151600283015560609092015151600390910155805160a08101825260d1546080820190815281528151808401835260d25481529281019290925260e0919081016113b2612795565b81526020016113bf6121a7565b9052815460018181018455600093845260209384902083515160049093020191825583830151519082015560408083015160028301556060909201516003909101558051918201905260d15481527f3a3348362552c3897fd1f06a3233519ebd8bd76ad6e99a418a9741155fe90515906114389061219a565b604080516020810190915260d25481526114519061219a565b611459612795565b6040516114689392919061454c565b60405180910390a18015611482576000805461ff00191690555b5050505050505050505050565b6114976138f1565b61149f6138f1565b6114b161104736859003850185613b79565b6114ce576114bd61217f565b6114c561217f565b91509150611525565b604080516020810190915260d45481526114fd906114f136869003860186613b79565b9063ffffffff6125b016565b604080516020810190915260d5548152611520906114f136879003870187613b79565b915091505b915091565b6115326121ae565b6065546001600160a01b0390811691161461155f5760405162461bcd60e51b815260040161088390614420565b8061157c5760405162461bcd60e51b815260040161088390613e3c565b60db55565b6115896138f1565b61159585858585610f3f565b95945050505050565b60d45481565b6066546001600160a01b031690565b6115bb6138f1565b610e728383600161038461252a565b6115d26121ae565b6065546001600160a01b039081169116146115ff5760405162461bcd60e51b815260040161088390614420565b60e45460ff600160a01b909104161515811515141561161d57611681565b60e4805482158015600160a01b0260ff60a01b19909216919091179091556116815761167d610e10611671610e1061166560dc54611659612795565b9063ffffffff61279c16565b9063ffffffff61212016565b9063ffffffff6127c116565b60de555b50565b60d55481565b6116926121ae565b6065546001600160a01b039081169116146116bf5760405162461bcd60e51b815260040161088390614420565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6117116121ae565b6065546001600160a01b0390811691161461173e5760405162461bcd60e51b815260040161088390614420565b6001600160a01b0381166117645760405162461bcd60e51b81526004016108839061425a565b60e480546001600160a01b0319166001600160a01b0383811691909117918290556040517fe5b20b8497e4f3e2435ef9c20e2e26b47497ee13745ce1c681ad6640653119e6926117b5921690613cb6565b60405180910390a150565b60e4546001600160a01b031681565b60dc5481565b6117dd6138f1565b60e454600160a01b900460ff166118065760405162461bcd60e51b8152600401610883906140ac565b61180e6121ae565b60e1546001600160a01b0390811691161461183b5760405162461bcd60e51b815260040161088390613e73565b61184d61104736869003860186613b79565b61185957610f5c61217f565b600185600181111561186757fe5b14156118cd5761187f61104736869003860186613b79565b604080516020808201835260d0548252825190810190925260d15482526118af916110479163ffffffff6125b016565b10156118cd5760405162461bcd60e51b815260040161088390613f32565b6118d56138f1565b6118e8866107c836889003880188613b79565b90506118fc61104736869003860186613b79565b1561198c57600086600181111561190f57fe5b14156119535761192761104736869003860186613b79565b6119308261219a565b101561194e5760405162461bcd60e51b81526004016108839061414c565b61198c565b61196561104736869003860186613b79565b61196e8261219a565b111561198c5760405162461bcd60e51b8152600401610883906142c8565b6119a68661199f36889003880188613b79565b83866127fb565b7fae6a2b946841d9afc0e1e19a94ae4af26f01125b87b5095bbfb177a9741a2ede866119da61104736899003890189613b79565b6119e38461219a565b6040516119f293929190613cec565b60405180910390a195945050505050565b611a0b6121ae565b6065546001600160a01b03908116911614611a385760405162461bcd60e51b815260040161088390614420565b5160d455565b6065546001600160a01b031690565b60d05481565b61011755565b611a616138f1565b611a6a8461219a565b611a7657610f5c61217f565b600080866001811115611a8557fe5b149050611a906138f1565b611aa3610e45868663ffffffff6125b016565b9050611aad6138f1565b611ab56138f1565b611abd6138f1565b8415611ada57611ad3878a63ffffffff61237f16565b9150611aed565b611aea878a63ffffffff6123ab16565b91505b611af68261219a565b611b125760405162461bcd60e51b815260040161088390613d61565b611b22848363ffffffff6125d316565b9250611029611024848a63ffffffff61264416565b6000611b416138f1565b611b49610e85565b90506000611b568261219a565b11611b735760405162461bcd60e51b815260040161088390613fce565b611b7b6138f1565b611b83611e7a565b9050611b8d6138f1565b611bb961102484611bad86611ba1876124a4565b9063ffffffff61264416565b9063ffffffff6125d316565b905067016345785d8a0000611bcd8261219a565b1015611bda576000611bdd565b60015b935050505090565b611bed6121ae565b6065546001600160a01b03908116911614611c1a5760405162461bcd60e51b815260040161088390614420565b60e180546001600160a01b0319166001600160a01b0392909216919091179055565b611c446121ae565b6065546001600160a01b03908116911614611c715760405162461bcd60e51b815260040161088390614420565b5160d355565b611c7f6138f1565b61159585858585611a59565b611c936121ae565b6065546001600160a01b03908116911614611cc05760405162461bcd60e51b815260040161088390614420565b60e280546001600160a01b0319166001600160a01b0392909216919091179055565b6066546001600160a01b0316611d0a5760405162461bcd60e51b8152600401610883906143d1565b611d126121ae565b6066546001600160a01b03908116911614611d3f5760405162461bcd60e51b815260040161088390613f5e565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b60dd5481565b6000610843612795565b60d25481565b611dc36138f1565b60e454600160a01b900460ff16611dec5760405162461bcd60e51b8152600401610883906140ac565b611df46121ae565b60e1546001600160a01b03908116911614611e215760405162461bcd60e51b815260040161088390613e73565b6110a884611e3436869003860186613b79565b611e4336869003860186613b79565b612997565b611e506138f1565b604080516020808201835260d1548252825190810190925260d2548252610e729185918591611a59565b611e826138f1565b604080516020808201835260d2548252825190810190925260d1548252610843919063ffffffff6123ce16565b60de5481565b611ebd6138f1565b604080516020808201835260d1548252825190810190925260d2548252610e729185918591610f3f565b60d15481565b611ef56138f1565b50604080516020810190915260cb54815290565b611f116138f1565b50604080516020810190915260cf54815290565b611f2d6138f1565b60e454600160a01b900460ff16611f565760405162461bcd60e51b8152600401610883906140ac565b611f5e6121ae565b60e1546001600160a01b03908116911614611f8b5760405162461bcd60e51b815260040161088390613e73565b60de54611f96612795565b1015611fb45760405162461bcd60e51b81526004016108839061432f565b611fbc6138f1565b611fc760db54610d1e565b9050611fd16138f1565b611fe382611ba1610e4560db54612082565b9050611fed6138f1565b6120156201518061200960dc5485612b4290919063ffffffff16565b9063ffffffff612ba516565b90506120218184612bc7565b600061203160dd54611659612795565b90506000612058610e10611671610e1061166560dc5460de5461279c90919063ffffffff16565b90508181116120675781612069565b805b60de5561207461217f565b5160cb555090935050505090565b61208a6138f1565b610a7f82612c1f565b61209b611a3e565b6001600160a01b03166120ac6121ae565b6001600160a01b031614806120db575060e2546001600160a01b03166120d06121ae565b6001600160a01b0316145b6120f75760405162461bcd60e51b815260040161088390614115565b6120ff612c50565b565b60e454600160a01b900460ff1681565b60e3546001600160a01b031681565b6000610e7283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612da8565b61216a6138f1565b6040518060200160405280610f1b601261219e565b6121876138f1565b5060408051602081019091526000815290565b5190565b60ff16600a0a90565b6101185490565b3390565b6121ba6138f1565b6121c26138f1565b60e0546121cd613943565b60e06121e083600163ffffffff61242216565b815481106121ea57fe5b60009182526020918290206040805160a08101825260049093029091018054608084019081528352815180850183526001820154815293830193909352600283015490820152600390910154606082015290506122456121a7565b81606001511480156122575750600182115b156122cd5760e061226f83600263ffffffff61242216565b8154811061227957fe5b60009182526020918290206040805160a08101825260049093029091018054608084019081528352815180850183526001820154815293830193909352600283015490820152600390910154606082015290505b6122d56138f1565b602082015182516122eb9163ffffffff6123ce16565b90506122f56138f1565b604080516020810190915260d354815261232e9061232190612315612162565b9063ffffffff61237f16565b839063ffffffff6125b016565b90506123386138f1565b604080516020810190915260d35481526123719061236490612358612162565b9063ffffffff6123ab16565b849063ffffffff6125b016565b919650909450505050509091565b6123876138f1565b61238f6138f1565b825184516123a29163ffffffff61279c16565b81529392505050565b6123b36138f1565b6123bb6138f1565b825184516123a29163ffffffff61242216565b6123d66138f1565b6123de6138f1565b825184516123a29163ffffffff612ddf16565b80518251600091101561240657506001610a7f565b8151835110156124195750600019610a7f565b50600092915050565b6000610e7283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612ded565b600061246f82612476565b5192915050565b61247e6138f1565b6124866138f1565b82516000131561249c5782516000038152610a7f565b915182525090565b6124ac6138f1565b8180600001516001600160ff1b0310156040518060600160405280603381526020016145ba60339139906124f35760405162461bcd60e51b81526004016108839190613d0e565b50506040805160208101909152915182525090565b6125106138f1565b6125186138f1565b83516123a2908463ffffffff612e1916565b6125326138f1565b61253a613977565b600180825260e05461254b91612422565b6020820152604081015186600181111561256157fe5b9081600181111561256e57fe5b90525060408082018051602001879052510184600181111561258c57fe5b9081600181111561259957fe5b9052506125a68184612e84565b9695505050505050565b6125b86138f1565b6125c06138f1565b825184516123a29163ffffffff6130f116565b6125db6138f1565b8180600001516001600160ff1b0310156040518060600160405280603381526020016145ba60339139906126225760405162461bcd60e51b81526004016108839190613d0e565b5061262b6138f1565b611595612637856124a4565b869063ffffffff6130ff16565b61264c6138f1565b8180600001516001600160ff1b0310156040518060600160405280603381526020016145ba60339139906126935760405162461bcd60e51b81526004016108839190613d0e565b5061269c6138f1565b835185516126af9163ffffffff61312216565b8152949350505050565b6126c16138f1565b604051806020016040528083600001516126ec6126de601261219e565b87519063ffffffff6127c116565b816126f357fe5b0690529392505050565b303b1590565b600054610100900460ff168061271c575061271c6126fd565b8061272a575060005460ff16155b6127465760405162461bcd60e51b8152600401610883906141c5565b600054610100900460ff16158015612771576000805460ff1961ff0019909116610100171660011790555b612779613168565b6127816131e9565b8015611681576000805461ff001916905550565b6101175490565b600082820183811015610e725760405162461bcd60e51b815260040161088390613e05565b6000826127d057506000610a7f565b828202828482816127dd57fe5b0414610e725760405162461bcd60e51b8152600401610883906140d4565b612807848484846132c3565b600084600181111561281557fe5b14156128d457604080516020810190915260d154815261283b908463ffffffff61237f16565b5160d155604080516020810190915260d254815261285f908363ffffffff6123ab16565b5160d255604080516020810190915260cb548152612883908363ffffffff61264416565b5160cb55604080516020810190915260cc5481526128a7908363ffffffff61348c16565b5160cc55604080516020810190915260ce5481526128cb908463ffffffff61348c16565b5160ce55612989565b604080516020810190915260d15481526128f4908463ffffffff6123ab16565b5160d155604080516020810190915260d2548152612918908363ffffffff61237f16565b5160d255604080516020810190915260cb54815261293c908363ffffffff61348c16565b5160cb55604080516020810190915260cc548152612960908363ffffffff61264416565b5160cc55604080516020810190915260ce548152612984908463ffffffff61264416565b5160ce555b6129916134f7565b50505050565b61299f6138f1565b6129a88361219a565b6129bb576129b461217f565b9050610e72565b60018460018111156129c957fe5b1415612a26576129d88361219a565b604080516020808201835260d0548252825190810190925260d2548252612a08916110479163ffffffff6125b016565b1015612a265760405162461bcd60e51b815260040161088390613f32565b612a2e6138f1565b612a388585611e48565b9050600080866001811115612a4957fe5b14612a55576000612a58565b60015b9050612a638461219a565b15612ae1576001816001811115612a7657fe5b1415612ab157612a858461219a565b612a8e8361219a565b1015612aac5760405162461bcd60e51b815260040161088390614075565b612ae1565b612aba8461219a565b612ac38361219a565b1115612ae15760405162461bcd60e51b815260040161088390614291565b612aee81838760016127fb565b7f0dd4066b1a6ce97fb670c3e4201e908c644193f38cbdaffd0229d7e26da3e53386612b198461219a565b612b228861219a565b604051612b3193929190613cec565b60405180910390a150949350505050565b612b4a6138f1565b816001600160ff1b0310156040518060600160405280603381526020016145ba6033913990612b8c5760405162461bcd60e51b81526004016108839190613d0e565b50612b956138f1565b6110a8848463ffffffff61250816565b612bad6138f1565b612bb56138f1565b83516123a2908463ffffffff61362f16565b612bd7828263ffffffff6125d316565b5160cd81905560408051602081019091529081527fd2805fe76d30598332a67c1061cee82e2e102b0f59f5457b1729bce028a054a090612c169061219a565b6108ea8361219a565b612c276138f1565b612c2f613977565b6000815260e054612c41906001612422565b6020820152610e728184612e84565b612c58613904565b612c60610b5e565b9050612c6a6138f1565b60208201516040830151612c839163ffffffff6125b016565b9050612c8d6138f1565b60408301516060840151612ca69163ffffffff61348c16565b9050612cb06138f1565b612cc982612cbd856124a4565b9063ffffffff6130ff16565b9050612cd36138f1565b604080516020810190915260d1548152612cf490839063ffffffff61264416565b604080516020810190915260cc548152909150606490612d1390612464565b1115612d4457604080516020810190915260cc548152612d3f90612d3690612476565b6109d783612476565b5160cf555b60e4805460ff60a01b19169055604080516020810190915260cf5481527f574214b195bf5273a95bb4498e35cf1fde0ce327c727a95ec2ab359f7ba4e11a90612d8c9061219a565b604051612d999190613cd5565b60405180910390a15050505050565b60008183612dc95760405162461bcd60e51b81526004016108839190613d0e565b506000838581612dd557fe5b0495945050505050565b6000610e7283836012613693565b60008184841115612e115760405162461bcd60e51b81526004016108839190613d0e565b505050900390565b600082612e2857506000610a7f565b82600019148015612e3c5750600160ff1b82145b15612e595760405162461bcd60e51b815260040161088390614213565b82820282848281612e6657fe5b0514610e725760405162461bcd60e51b815260040161088390614213565b612e8c6138f1565b612e946138f1565b612e9d846136b2565b905082612eab579050610a7f565b6000612ec584612eb9612795565b9063ffffffff61242216565b9050612ecf613943565b60e0866020015181548110612ee057fe5b60009182526020918290206040805160a081018252600490930290910180546080840190815283528151808501835260018083015482529484015260028101549183019190915260030154606082015260e0549092501480612f46575081816040015111155b15612f5657829350505050610a7f565b60408101516000612f6982612eb9612795565b9050612f736138f1565b612f83868363ffffffff61381016565b90505b6020890151612fac57612f9f818363ffffffff61383216565b9650505050505050610a7f565b6020890151612fc290600163ffffffff61242216565b60208a0181905260e080549091908110612fd857fe5b60009182526020918290206040805160a0810182526004909302909101805460808401908152835281518085018352600182015481529383019390935260028301549082015260039091015460608201529350613034896136b2565b95508484604001511161307857613071613064613057858863ffffffff61242216565b889063ffffffff61381016565b829063ffffffff61237f16565b90506130d4565b600061309185604001518561242290919063ffffffff16565b90506130b36130a6888363ffffffff61381016565b839063ffffffff61237f16565b91506130c5838263ffffffff61279c16565b92508460400151935050612f86565b6130e4818963ffffffff61383216565b9998505050505050505050565b6000610e7283836012613854565b6131076138f1565b61310f6138f1565b825184516123a29163ffffffff61387216565b60008183038183128015906131375750838113155b8061314c575060008312801561314c57508381135b610e725760405162461bcd60e51b81526004016108839061438d565b600054610100900460ff168061318157506131816126fd565b8061318f575060005460ff16155b6131ab5760405162461bcd60e51b8152600401610883906141c5565b600054610100900460ff16158015612781576000805460ff1961ff0019909116610100171660011790558015611681576000805461ff001916905550565b600054610100900460ff168061320257506132026126fd565b80613210575060005460ff16155b61322c5760405162461bcd60e51b8152600401610883906141c5565b600054610100900460ff16158015613257576000805460ff1961ff0019909116610100171660011790555b60006132616121ae565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015611681576000805461ff001916905550565b604080516020810190915260d35481526132dc9061219a565b6132e557612991565b6132ed6138f1565b6132f56138f1565b6132fd6121b2565b915091506133096138f1565b604080516020808201835260d2548252825190810190925260d1548252613336919063ffffffff6123ce16565b9050600061334a828563ffffffff6123f116565b60000b1315801561336e57506000613368828463ffffffff6123f116565b60000b12155b61338a5760405162461bcd60e51b815260040161088390613d90565b8361348357600087600181111561339d57fe5b146133eb57604080516020810190915260d25481526133e6906133c6908763ffffffff61237f16565b604080516020810190915260d15481526109d7908963ffffffff6123ab16565b61342f565b604080516020810190915260d254815261342f9061340f908763ffffffff6123ab16565b604080516020810190915260d15481526109d7908963ffffffff61237f16565b90506000613443828563ffffffff6123f116565b60000b1315801561346757506000613461828463ffffffff6123f116565b60000b12155b6134835760405162461bcd60e51b815260040161088390613ffd565b50505050505050565b6134946138f1565b8180600001516001600160ff1b0310156040518060600160405280603381526020016145ba60339139906134db5760405162461bcd60e51b81526004016108839190613d0e565b506134e46138f1565b835185516126af9163ffffffff61388016565b60006135016121a7565b60e08054919250600091600019810190811061351957fe5b9060005260206000209060040201905080600301548214156135475760d154815560d25460018201556135c4565b6040805160a08101825260d15460808201908152815281516020818101845260d254825282015260e091810161357b612795565b8152602090810185905282546001818101855560009485529382902083515160049092020190815590820151519281019290925560408101516002830155606001516003909101555b604080516020810190915260d15481527f3a3348362552c3897fd1f06a3233519ebd8bd76ad6e99a418a9741155fe90515906135ff9061219a565b604080516020810190915260d25481526136189061219a565b613620612795565b6040516108f89392919061454c565b60008161364e5760405162461bcd60e51b81526004016108839061446d565b816000191480156136625750600160ff1b83145b1561367f5760405162461bcd60e51b815260040161088390614034565b600082848161368a57fe5b05949350505050565b60006110a8836116656136a58561219e565b879063ffffffff6127c116565b6136ba6138f1565b6136c2613943565b60e08360200151815481106136d357fe5b600091825260208083206040805160a0810182526004909402909101805460808501908152845281518084018352600182015481529284019290925260028201549083015260030154606082015291508351600181111561373057fe5b1415613754576020810151815161374c9163ffffffff6123ce16565b915050610cdb565b60018351600181111561376357fe5b14156137f85761377a83604001516020015161219a565b6137865761374c61217f565b6000836040015160400151600181111561379c57fe5b14156137bf576040830151805160209182015183519284015161374c9390610f3f565b600183604001516040015160018111156137d557fe5b14156137f8576040830151805160209182015183519284015161374c9390611a59565b60405162461bcd60e51b815260040161088390613dd7565b6138186138f1565b6138206138f1565b83516123a2908463ffffffff6127c116565b61383a6138f1565b6138426138f1565b83516123a2908463ffffffff61212016565b60006110a86138628361219e565b611665868663ffffffff6127c116565b6000610e72838360126138c6565b60008282018183128015906138955750838112155b806138aa57506000831280156138aa57508381125b610e725760405162461bcd60e51b815260040161088390613ef1565b60006110a8836138e56138d88561219e565b879063ffffffff612e1916565b9063ffffffff61362f16565b6040518060200160405280600081525090565b60405180608001604052806139176138f1565b81526020016139246138f1565b81526020016139316138f1565b815260200161393e6138f1565b905290565b60405180608001604052806139566138f1565b81526020016139636138f1565b815260200160008152602001600081525090565b604080516060810190915280600081526020016000815260200161393e604080516060810190915280600081526020016139af6138f1565b8152602001600061393e565b6000602082840312156139cc578081fd5b50919050565b6000602082840312156139e3578081fd5b6139ed6020614562565b9135825250919050565b600060208284031215613a08578081fd5b8135610e7281614589565b600060208284031215613a24578081fd5b8135610e728161459e565b600080600060608486031215613a43578182fd5b833560028110613a51578283fd5b9250613a6085602086016139bb565b9150613a6f85604086016139bb565b90509250925092565b60008060008060808587031215613a8d578081fd5b8435613a98816145ac565b9350613aa786602087016139bb565b9250613ab686604087016139bb565b91506060850135613ac68161459e565b939692955090935050565b60008060408385031215613ae3578182fd5b8235613aee816145ac565b9150613afd84602085016139d2565b90509250929050565b60008060008060808587031215613b1b578384fd5b8435613b26816145ac565b9350613b3586602087016139d2565b9250613b4486604087016139d2565b9150613b5386606087016139d2565b905092959194509250565b600060208284031215613b6f578081fd5b610e7283836139bb565b600060208284031215613b8a578081fd5b610e7283836139d2565b60008060408385031215613ba6578182fd5b613aee84846139d2565b60008060008385036060811215613bc5578384fd5b6020811215613bd2578384fd5b50613bdd6020614562565b843581529250613bf085602086016139d2565b9150613a6f85604086016139d2565b600060208284031215613c10578081fd5b5035919050565b600060208284031215613c28578081fd5b5051919050565b6000806000806000806000806000806101408b8d031215613c4e578788fd5b8a35995060208b0135985060408b0135975060608b0135965060808b0135613c7581614589565b955060a08b0135945060c08b0135613c8c81614589565b8094505060e08b013592506101008b013591506101208b013590509295989b9194979a5092959850565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b918252602082015260400190565b6060810160028510613cfa57fe5b938152602081019290925260409091015290565b6000602080835283518082850152825b81811015613d3a57858101830151858201604001528201613d1e565b81811115613d4b5783604083870101525b50601f01601f1916929092016040019392505050565b602080825260159082015274062617365206173736574206166746572206973203605c1b604082015260600190565b60208082526027908201527f707269636520697320616c7265616479206f76657220666c756374756174696f6040820152661b881b1a5b5a5d60ca1b606082015260800190565b6020808252601490820152733737ba1039bab83837b93a32b21037b83a34b7b760611b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526019908201527f63616e206e6f742073657420696e74657276616c20746f203000000000000000604082015260600190565b6020808252601a908201527f63616c6c6572206973206e6f7420636f756e7465725061727479000000000000604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601290820152711bdd995c881d1c98591a5b99c81b1a5b5a5d60721b604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b6020808252600f908201526e0d2dcc6dee4e4cac6e840d2dcc8caf608b1b604082015260600190565b6020808252601590820152740756e6465726c79696e67207072696365206973203605c1b604082015260600190565b6020808252601f908201527f7072696365206973206f76657220666c756374756174696f6e206c696d697400604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601d908201527f4c657373207468616e206d696e696d616c2071756f746520746f6b656e000000604082015260600190565b6020808252600e908201526d185b5b481dd85cc818db1bdcd95960921b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252601c908201527f6e6f74206f776e6572206e6f7220676c6f62616c53687574646f776e00000000604082015260600190565b6020808252601c908201527f4c657373207468616e206d696e696d616c206261736520746f6b656e00000000604082015260600190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526027908201527f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f604082015266766572666c6f7760c81b606082015260800190565b60208082526019908201527f696e76616c696420507269636546656564206164647265737300000000000000604082015260600190565b6020808252601d908201527f4d6f7265207468616e206d6178696d616c2071756f746520746f6b656e000000604082015260600190565b6020808252601c908201527f4d6f7265207468616e206d6178696d616c206261736520746f6b656e00000000604082015260600190565b602080825260169082015275071756f746520617373657420616674657220697320360541b604082015260600190565b60208082526018908201527f736574746c652066756e64696e6720746f6f206561726c790000000000000000604082015260600190565b6020808252600d908201526c1a5b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f766572604082015263666c6f7760e01b606082015260800190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b6020808252818101527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604082015260600190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b815151815260208083015151908201526040808301515190820152606091820151519181019190915260800190565b9051815260200190565b9151825251602082015260400190565b93518452915160208401526040830152606082015260800190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561458157600080fd5b604052919050565b6001600160a01b038116811461168157600080fd5b801515811461168157600080fd5b6002811061168157600080fdfe4d69786564446563696d616c3a2075696e742076616c756520697320626967676572207468616e205f494e543235365f4d4158a26469706673582212209dc7381037f0b30905303ae1379e8df4845402d1b9388e4752a53227df9e35ff64736f6c63430006090033";
