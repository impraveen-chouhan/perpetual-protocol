/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { FeeRewardPoolL1Fake } from "../FeeRewardPoolL1Fake";

export class FeeRewardPoolL1Fake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<FeeRewardPoolL1Fake> {
    return super.deploy(overrides || {}) as Promise<FeeRewardPoolL1Fake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeRewardPoolL1Fake {
    return super.attach(address) as FeeRewardPoolL1Fake;
  }
  connect(signer: Signer): FeeRewardPoolL1Fake__factory {
    return super.connect(signer) as FeeRewardPoolL1Fake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeRewardPoolL1Fake {
    return new Contract(address, _abi, signerOrProvider) as FeeRewardPoolL1Fake;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTokenPoolDispatcher",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract StakedPerpToken",
        name: "_stakedPerpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeTokenPoolDispatcher",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "mock_setBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "mock_setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakedPerpTokenAddr",
        type: "address",
      },
    ],
    name: "mock_setStakedPerpTokenAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_reward",
        type: "tuple",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "notifyStakeChanged",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedPerpToken",
    outputs: [
      {
        internalType: "contract StakedPerpToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedPerpTokenAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052635611c2306101395561271161013a5534801561002057600080fd5b50611c71806100306000396000f3fe608060405234801561001057600080fd5b50600436106101c25760003560e01c80639432665a116100f9578063cd8ae3dd11610097578063ebe2b12b11610071578063ebe2b12b1461031c578063f6aa49e714610324578063fc0c546a1461032c578063ff59f86d14610334576101c2565b8063cd8ae3dd146102ee578063df136d6514610301578063e40859dd14610309576101c2565b8063c77f7c61116100d3578063c77f7c61146102ce578063c885bc58146102d6578063c8f33c91146102de578063cd3daf9d146102e6576101c2565b80639432665a146102a0578063bc5920ba146102b3578063c0c53b8b146102bb576101c2565b80635e4629cd116101665780637b0a47ee116101405780637b0a47ee1461027557806380faa57d1461027d5780638b876347146102855780638da5cb5b14610298576101c2565b80635e4629cd1461025d5780636c8381f814610265578063715018a61461026d576101c2565b806309338383116101a2578063093383831461022557806313af40351461022d5780631be05289146102405780634cd7ee9514610248576101c2565b80628cc262146101c7578062c141b6146101f05780630700037d14610205575b600080fd5b6101da6101d536600461164e565b610347565b6040516101e79190611be7565b60405180910390f35b6102036101fe366004611728565b6103d4565b005b61021861021336600461164e565b6103da565b6040516101e79190611bf1565b6102186103ec565b61020361023b36600461164e565b6103fc565b6102186104de565b6102506104e5565b6040516101e79190611774565b6102506104f5565b610250610505565b610203610514565b610218610593565b61021861059a565b61021861029336600461164e565b6105b0565b6102506105c2565b6102036102ae366004611728565b6105d1565b6102036105d7565b6102036102c936600461168a565b61069a565b61021861078e565b610203610798565b610218610886565b6101da61088d565b6102036102fc36600461164e565b610947565b61021861097e565b61020361031736600461164e565b610985565b6102186109a8565b6102506109af565b6102506109bf565b6102036103423660046116d4565b6109cf565b61034f61163b565b6001600160a01b038216600081815260ff60209081526040808320815180840183529054815293835260fe8252918290208251918201909252905481526103ce91906103c2906103ad906103a161088d565b9063ffffffff610b5b16565b6103b686610b87565b9063ffffffff610c2016565b9063ffffffff610c4316565b92915050565b61013a55565b60ff6020526000908152604090205481565b60006103f6610c66565b90505b90565b610404610c6d565b6065546001600160a01b0390811691161461043a5760405162461bcd60e51b815260040161043190611b54565b60405180910390fd5b6001600160a01b0381166104605760405162461bcd60e51b8152600401610431906119ae565b6065546001600160a01b038281169116141561048e5760405162461bcd60e51b815260040161043190611ba1565b6066546001600160a01b03828116911614156104bc5760405162461bcd60e51b815260040161043190611842565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6201518081565b610105546001600160a01b031681565b61013b546001600160a01b031681565b6066546001600160a01b031690565b61051c610c6d565b6065546001600160a01b039081169116146105495760405162461bcd60e51b815260040161043190611b54565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6101015481565b60006103f66105a7610c71565b61010354610c78565b60fe6020526000908152604090205481565b6065546001600160a01b031690565b61013955565b6066546001600160a01b03166105ff5760405162461bcd60e51b815260040161043190611b05565b610607610c6d565b6066546001600160a01b039081169116146106345760405162461bcd60e51b8152600401610431906118ae565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b600054610100900460ff16806106b357506106b3610c90565b806106c1575060005460ff16155b6106dd5760405162461bcd60e51b8152600401610431906119f0565b600054610100900460ff16158015610708576000805460ff1961ff0019909116610100171660011790555b6001600160a01b03831661072e5760405162461bcd60e51b815260040161043190611a3e565b610736610c96565b61010580546001600160a01b038086166001600160a01b03199283161790925561010480548584169083161790556101068054928716929091169190911790558015610788576000805461ff00191690555b50505050565b60006103f6610c71565b60006107a2610c6d565b90506107ad81610d28565b6107b561163b565b506001600160a01b038116600090815260ff602090815260408083208151928301909152548152906107e682610d87565b116108035760405162461bcd60e51b815260040161043190611889565b61080b610d8b565b6001600160a01b03808416600090815260ff6020526040902091519091556101065461083991168383610da6565b816001600160a01b03167f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e133761086d83610d87565b60405161087a9190611bf1565b60405180910390a25050565b6101025481565b61089561163b565b61089d61163b565b6108a5610ed5565b90506108b081610d87565b6108cc57505060408051602081019091526101005481526103f9565b60006108e9610102546108dd61059a565b9063ffffffff610f7616565b604080516020810190915261010154815290915061094090610923908390610917908663ffffffff610fb816565b9063ffffffff610fdb16565b60408051602081019091526101005481529063ffffffff610c4316565b9250505090565b61013b546001600160a01b031633146109725760405162461bcd60e51b815260040161043190611a65565b61097b81610d28565b50565b6101005481565b61013b80546001600160a01b0319166001600160a01b0392909216919091179055565b6101035481565b610104546001600160a01b031681565b610106546001600160a01b031681565b610104546001600160a01b03166109e4610c6d565b6001600160a01b031614610a0a5760405162461bcd60e51b815260040161043190611936565b6000610a23610a1e368490038401846116eb565b610d87565b11610a405760405162461bcd60e51b815260040161043190611a9c565b610a4a6000610d28565b6000610a54610c71565b9050610103548110610a8c57610a8262015180610a76368590038501856116eb565b9063ffffffff610ffd16565b5161010155610af2565b61010354600090610aa3908363ffffffff610f7616565b9050610aad61163b565b6040805160208101909152610101548152610ace908363ffffffff610fdb16565b9050610aea62015180610a76836103c2368990038901896116eb565b516101015550505b610102819055610b0b816201518063ffffffff61101f16565b610103557fe7b1adc654f4988d82260a00603bcc1f508dc3aa94b2b9cd5bc9ab42cfc591dc610b42610a1e368590038501856116eb565b604051610b4f9190611bf1565b60405180910390a15050565b610b6361163b565b610b6b61163b565b82518451610b7e9163ffffffff610f7616565b81529392505050565b610b8f61163b565b604080516020810191829052610105546370a0823160e01b9092529081906001600160a01b03166370a08231610bc88660248501611774565b60206040518083038186803b158015610be057600080fd5b505afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190611740565b905292915050565b610c2861163b565b610c3061163b565b82518451610b7e9163ffffffff61104416565b610c4b61163b565b610c5361163b565b82518451610b7e9163ffffffff61101f16565b61013a5490565b3390565b6101395490565b6000818310610c875781610c89565b825b9392505050565b303b1590565b600054610100900460ff1680610caf5750610caf610c90565b80610cbd575060005460ff16155b610cd95760405162461bcd60e51b8152600401610431906119f0565b600054610100900460ff16158015610d04576000805460ff1961ff0019909116610100171660011790555b610d0c611052565b610d146110d3565b801561097b576000805461ff001916905550565b610d3061088d565b5161010055610d3d61059a565b610102556001600160a01b0381161561097b57610d5981610347565b6001600160a01b038216600090815260ff60209081526040808320935190935560fe90522061010054905550565b5190565b610d9361163b565b5060408051602081019091526000815290565b610daf836111ad565b610db761163b565b610dc184846111fa565b90506000610dcf8584611287565b905060006060866001600160a01b031663a9059cbb60e01b8785604051602401610dfa929190611788565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610e389190611758565b6000604051808303816000865af19150503d8060008114610e75576040519150601f19603f3d011682016040523d82523d6000602084013e610e7a565b606091505b5091509150818015610ea4575080511580610ea4575080806020019051810190610ea4919061166a565b610ec05760405162461bcd60e51b8152600401610431906117d4565b610ecc87878587611305565b50505050505050565b610edd61163b565b604051806020016040528061010560009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f3757600080fd5b505afa158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f9190611740565b9052905090565b6000610c8983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611358565b610fc061163b565b610fc861163b565b82518451610b7e9163ffffffff61138416565b610fe361163b565b610feb61163b565b8351610b7e908463ffffffff61139216565b61100561163b565b61100d61163b565b8351610b7e908463ffffffff6113cc16565b600082820183811015610c895760405162461bcd60e51b81526004016104319061180b565b6000610c898383601261140e565b600054610100900460ff168061106b575061106b610c90565b80611079575060005460ff16155b6110955760405162461bcd60e51b8152600401610431906119f0565b600054610100900460ff16158015610d14576000805460ff1961ff001990911661010017166001179055801561097b576000805461ff001916905550565b600054610100900460ff16806110ec57506110ec610c90565b806110fa575060005460ff16155b6111165760405162461bcd60e51b8152600401610431906119f0565b600054610100900460ff16158015611141576000805460ff1961ff0019909116610100171660011790555b600061114b610c6d565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561097b576000805461ff001916905550565b60006111b88261142c565b6001600160a01b038316600090815260cb602052604090205490915081146111f6576001600160a01b038216600090815260cb602052604090208190555b5050565b61120261163b565b610c8983846001600160a01b03166370a08231856040518263ffffffff1660e01b81526004016112329190611774565b60206040518083038186803b15801561124a57600080fd5b505afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112829190611740565b611519565b6000806112938461142c565b9050601281106112d1576112c96112b182601263ffffffff610f7616565b600a0a6112bd85610d87565b9063ffffffff61139216565b9150506103ce565b6112fd6112e560128363ffffffff610f7616565b600a0a6112f185610d87565b9063ffffffff6113cc16565b949350505050565b6113386113226113158685611519565b839063ffffffff610c4316565b61132c86866111fa565b9063ffffffff6115ab16565b60000b156107885760405162461bcd60e51b815260040161043190611ac3565b6000818484111561137c5760405162461bcd60e51b815260040161043191906117a1565b505050900390565b6000610c89838360126115dc565b6000826113a1575060006103ce565b828202828482816113ae57fe5b0414610c895760405162461bcd60e51b81526004016104319061196d565b6000610c8983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506115fb565b60006112fd61141c83611632565b6112f1868663ffffffff61139216565b6001600160a01b038116600090815260cb6020526040812054806103ce5760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000916060916001600160a01b0387169161148e91611758565b600060405180830381855afa9150503d80600081146114c9576040519150601f19603f3d011682016040523d82523d6000602084013e6114ce565b606091505b50915091508180156114e05750805115155b6114fc5760405162461bcd60e51b8152600401610431906118f5565b808060200190518101906115109190611740565b95945050505050565b61152161163b565b600061152c8461142c565b9050601281106115715760408051602081019091528061156661155684601263ffffffff610f7616565b8690600a0a63ffffffff6113cc16565b8152509150506103ce565b6040805160208101909152806115a161159160128563ffffffff610f7616565b8690600a0a63ffffffff61139216565b9052949350505050565b8051825160009110156115c0575060016103ce565b8151835110156115d357506000196103ce565b50600092915050565b60006112fd836112f16115ee85611632565b879063ffffffff61139216565b6000818361161c5760405162461bcd60e51b815260040161043191906117a1565b50600083858161162857fe5b0495945050505050565b60ff16600a0a90565b6040518060200160405280600081525090565b60006020828403121561165f578081fd5b8135610c8981611c26565b60006020828403121561167b578081fd5b81518015158114610c89578182fd5b60008060006060848603121561169e578182fd5b83356116a981611c26565b925060208401356116b981611c26565b915060408401356116c981611c26565b809150509250925092565b6000602082840312156116e5578081fd5b50919050565b6000602082840312156116fc578081fd5b6040516020810181811067ffffffffffffffff8211171561171b578283fd5b6040529135825250919050565b600060208284031215611739578081fd5b5035919050565b600060208284031215611751578081fd5b5051919050565b6000825161176a818460208701611bfa565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526117c0816040850160208701611bfa565b601f01601f19169190910160400192915050565b6020808252601d908201527f446563696d616c45524332303a207472616e73666572206661696c6564000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b6020808252600b908201526a072657761726420697320360ac1b604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b60208082526021908201527f446563696d616c45524332303a2067657420646563696d616c73206661696c656040820152601960fa1b606082015260800190565b6020808252601b908201527f6f6e6c7920666565546f6b656e506f6f6c446973706174636865720000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600d908201526c125b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b6020808252601d908201527f6f6e6c7920466565546f6b656e506f6f6c446973706174636865724c31000000604082015260600190565b6020808252600d908201526c1a5b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b60208082526022908201527f446563696d616c45524332303a2062616c616e636520696e636f6e73697374656040820152611b9d60f21b606082015260800190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b9051815260200190565b90815260200190565b60005b83811015611c15578181015183820152602001611bfd565b838111156107885750506000910152565b6001600160a01b038116811461097b57600080fdfea2646970667358221220f08e537fa57b356d52b747d568e61f48a814fc07fbc7c1e1bd60f1067255e00264736f6c63430006090033";
