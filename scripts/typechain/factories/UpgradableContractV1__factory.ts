/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UpgradableContractV1 } from "../UpgradableContractV1";

export class UpgradableContractV1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<UpgradableContractV1> {
    return super.deploy(overrides || {}) as Promise<UpgradableContractV1>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradableContractV1 {
    return super.attach(address) as UpgradableContractV1;
  }
  connect(signer: Signer): UpgradableContractV1__factory {
    return super.connect(signer) as UpgradableContractV1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableContractV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradableContractV1;
  }
}

const _abi = [
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d50146100465780638129fc1c146100605780638da5cb5b1461006a575b600080fd5b61004e61008e565b60408051918252519081900360200190f35b610068610094565b005b61007261014d565b604080516001600160a01b039092168252519081900360200190f35b60335481565b600054610100900460ff16806100ad57506100ad61015c565b806100bb575060005460ff16155b6100f65760405162461bcd60e51b815260040180806020018281038252602e815260200180610163602e913960400191505060405180910390fd5b600054610100900460ff16158015610121576000805460ff1961ff0019909116610100171660011790555b6001603355603480546001600160a01b03191633179055801561014a576000805461ff00191690555b50565b6034546001600160a01b031681565b303b159056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a26469706673582212208239e444895b9509949fb59d7843a0630306381b708b670c68c3559c4cc9b34f64736f6c63430006090033";
