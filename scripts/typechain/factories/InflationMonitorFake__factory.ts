/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { InflationMonitorFake } from "../InflationMonitorFake";

export class InflationMonitorFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<InflationMonitorFake> {
    return super.deploy(overrides || {}) as Promise<InflationMonitorFake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InflationMonitorFake {
    return super.attach(address) as InflationMonitorFake;
  }
  connect(signer: Signer): InflationMonitorFake__factory {
    return super.connect(signer) as InflationMonitorFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InflationMonitorFake {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InflationMonitorFake;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_THRESHOLD_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "appendMintedTokenHistory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMinter",
        name: "_minter",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOverMintThreshold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedAmountDuringMintThresholdPeriod",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "mock_setBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "mock_setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_shutdownThreshold",
        type: "tuple",
      },
    ],
    name: "setShutdownThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shutdownThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052635611c230610133556127116101345534801561002057600080fd5b50611434806100306000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063bc5920ba11610066578063bc5920ba146101c7578063c4d66de8146101cf578063c77f7c61146101e2578063cb821fbd146101ea576100f4565b8063715018a6146101915780638da5cb5b146101995780639432665a146101a1578063af5ff5ba146101b4576100f4565b80632f4d6fa6116100d35780632f4d6fa6146101345780633fe204d91461015257806356eb0393146101675780636c8381f81461017c576100f4565b8062c141b6146100f957806313af40351461010e578063213c4c7b14610121575b600080fd5b61010c61010736600461102e565b6101f2565b005b61010c61011c366004610fa2565b6101f8565b61010c61012f366004610fda565b6102da565b61013c6103d7565b60405161014991906113b0565b60405180910390f35b61015a6103dd565b604051610149919061108e565b61016f6104e6565b60405161014991906113a6565b610184610672565b604051610149919061107a565b61010c610681565b610184610700565b61010c6101af36600461102e565b61070f565b61010c6101c2366004610ff1565b610715565b61010c610750565b61010c6101dd366004610fa2565b610813565b61013c6108d8565b61013c6108e7565b61013455565b6102006108ee565b6065546001600160a01b039081169116146102365760405162461bcd60e51b815260040161022d90611313565b60405180910390fd5b6001600160a01b03811661025c5760405162461bcd60e51b815260040161022d90611234565b6065546001600160a01b038281169116141561028a5760405162461bcd60e51b815260040161022d90611360565b6066546001600160a01b03828116911614156102b85760405162461bcd60e51b815260040161022d90611124565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b610100546001600160a01b03166102ef6108ee565b6001600160a01b0316146103155760405162461bcd60e51b815260040161022d906110cc565b61031d610f8f565b60fe548061033b5761033436849003840184610ff1565b915061038c565b61038961034d36859003850185610ff1565b60fe600184038154811061035d57fe5b60009182526020918290206040805193840190526001600290920201015481529063ffffffff6108f216565b91505b60fe60405180604001604052806103a1610920565b81526020908101949094528154600181810184556000938452928590208251600290920201908155930151519201919091555050565b60ff5481565b604080516020810190915260ff5481526000906103f990610927565b610405575060006104e3565b61040d610f8f565b610100546040805163eb7c8c2560e01b81529051610491926001600160a01b03169163eb7c8c25916004808301926020929190829003018186803b15801561045457600080fd5b505afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190610fbe565b61092b565b905061049b610f8f565b6104a36104e6565b604080516020810190915260ff5481529091506000906104d9906104cd848663ffffffff6109ad16565b9063ffffffff6109d016565b60000b1215925050505b90565b6104ee610f8f565b60fe5480610506576104fe610a01565b9150506104e3565b600061054160fe600184038154811061051b57fe5b906000526020600020906002020160000154610535610920565b9063ffffffff610a1c16565b905062093a8081111561055f57610556610a01565b925050506104e3565b610567610f8f565b60001983015b801561066a5761057b610f8f565b6105e860fe600184038154811061058e57fe5b600091825260209182902060408051938401905260016002909202010154815260fe8054859081106105bc57fe5b60009182526020918290206040805193840190526001600290920201015481529063ffffffff610a6516565b90506105fa838263ffffffff6108f216565b925061064b60fe600184038154811061060f57fe5b90600052602060002090600202016000015460fe848154811061062e57fe5b60009182526020909120600290910201549063ffffffff610a1c16565b8401935062093a80841115610660575061066a565b506000190161056d565b509250505090565b6066546001600160a01b031690565b6106896108ee565b6065546001600160a01b039081169116146106b65760405162461bcd60e51b815260040161022d90611313565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6065546001600160a01b031690565b61013355565b61071d6108ee565b6065546001600160a01b0390811691161461074a5760405162461bcd60e51b815260040161022d90611313565b5160ff55565b6066546001600160a01b03166107785760405162461bcd60e51b815260040161022d906112c4565b6107806108ee565b6066546001600160a01b039081169116146107ad5760405162461bcd60e51b815260040161022d9061116b565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b600054610100900460ff168061082c575061082c610a88565b8061083a575060005460ff16155b6108565760405162461bcd60e51b815260040161022d90611276565b600054610100900460ff16158015610881576000805460ff1961ff0019909116610100171660011790555b610889610a8e565b61010080546001600160a01b0319166001600160a01b0384161790556108be600a6108b2610b21565b9063ffffffff610b4516565b5160ff5580156108d4576000805461ff00191690555b5050565b60006108e2610920565b905090565b62093a8081565b3390565b6108fa610f8f565b610902610f8f565b825184516109159163ffffffff610b6716565b815290505b92915050565b6101335490565b5190565b610933610f8f565b61091a82836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561097057600080fd5b505afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611046565b610b8c565b6109b5610f8f565b6109bd610f8f565b825184516109159163ffffffff610c1e16565b8051825160009110156109e55750600161091a565b8151835110156109f8575060001961091a565b50600092915050565b610a09610f8f565b5060408051602081019091526000815290565b6000610a5e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c2c565b9392505050565b610a6d610f8f565b610a75610f8f565b825184516109159163ffffffff610a1c16565b303b1590565b600054610100900460ff1680610aa75750610aa7610a88565b80610ab5575060005460ff16155b610ad15760405162461bcd60e51b815260040161022d90611276565b600054610100900460ff16158015610afc576000805460ff1961ff0019909116610100171660011790555b610b04610c58565b610b0c610cd9565b8015610b1e576000805461ff00191690555b50565b610b29610f8f565b6040518060200160405280610b3e6012610db3565b9052905090565b610b4d610f8f565b610b55610f8f565b8351610915908463ffffffff610dbc16565b600082820183811015610a5e5760405162461bcd60e51b815260040161022d906110ed565b610b94610f8f565b6000610b9f84610dfe565b905060128110610be457604080516020810190915280610bd9610bc984601263ffffffff610a1c16565b8690600a0a63ffffffff610dbc16565b81525091505061091a565b604080516020810190915280610c14610c0460128563ffffffff610a1c16565b8690600a0a63ffffffff610eeb16565b9052949350505050565b6000610a5e83836012610f25565b60008184841115610c505760405162461bcd60e51b815260040161022d9190611099565b505050900390565b600054610100900460ff1680610c715750610c71610a88565b80610c7f575060005460ff16155b610c9b5760405162461bcd60e51b815260040161022d90611276565b600054610100900460ff16158015610b0c576000805460ff1961ff0019909116610100171660011790558015610b1e576000805461ff001916905550565b600054610100900460ff1680610cf25750610cf2610a88565b80610d00575060005460ff16155b610d1c5760405162461bcd60e51b815260040161022d90611276565b600054610100900460ff16158015610d47576000805460ff1961ff0019909116610100171660011790555b6000610d516108ee565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610b1e576000805461ff001916905550565b60ff16600a0a90565b6000610a5e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610f58565b6001600160a01b038116600090815260cb60205260408120548061091a5760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000916060916001600160a01b03871691610e609161105e565b600060405180830381855afa9150503d8060008114610e9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ea0565b606091505b5091509150818015610eb25750805115155b610ece5760405162461bcd60e51b815260040161022d906111b2565b80806020019051810190610ee29190611046565b95945050505050565b600082610efa5750600061091a565b82820282848281610f0757fe5b0414610a5e5760405162461bcd60e51b815260040161022d906111f3565b6000610f5083610f44610f3785610db3565b879063ffffffff610eeb16565b9063ffffffff610dbc16565b949350505050565b60008183610f795760405162461bcd60e51b815260040161022d9190611099565b506000838581610f8557fe5b0495945050505050565b6040518060200160405280600081525090565b600060208284031215610fb3578081fd5b8135610a5e816113e9565b600060208284031215610fcf578081fd5b8151610a5e816113e9565b600060208284031215610feb578081fd5b50919050565b600060208284031215611002578081fd5b6040516020810181811067ffffffffffffffff82111715611021578283fd5b6040529135825250919050565b60006020828403121561103f578081fd5b5035919050565b600060208284031215611057578081fd5b5051919050565b600082516110708184602087016113b9565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b60006020825282518060208401526110b88160408501602087016113b9565b601f01601f19169190910160400192915050565b60208082526007908201526610b6b4b73a32b960c91b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b60208082526021908201527f446563696d616c45524332303a2067657420646563696d616c73206661696c656040820152601960fa1b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b9051815260200190565b90815260200190565b60005b838110156113d45781810151838201526020016113bc565b838111156113e3576000848401525b50505050565b6001600160a01b0381168114610b1e57600080fdfea2646970667358221220a10216eb5ee2d207673fde60464d4b29a53ffd5c31ce3183484131180f68c58864736f6c63430006090033";
