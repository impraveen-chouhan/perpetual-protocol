/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BalancerMock } from "../BalancerMock";

export class BalancerMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BalancerMock> {
    return super.deploy(overrides || {}) as Promise<BalancerMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalancerMock {
    return super.attach(address) as BalancerMock;
  }
  connect(signer: Signer): BalancerMock__factory {
    return super.connect(signer) as BalancerMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerMock {
    return new Contract(address, _abi, signerOrProvider) as BalancerMock;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getCurrentTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "getSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "perpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "cUSDT",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "mockSetCurrentTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "mockSetSpotPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b506103a0806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806315e84af91461005c578063485cc955146100855780637d4f87501461009a578063cc77828d146100ad578063ec2fbf9d146100c2575b600080fd5b61006f61006a36600461025c565b6100d5565b60405161007c9190610361565b60405180910390f35b61009861009336600461025c565b6100df565b005b6100986100a83660046102fc565b610145565b6100b561014a565b60405161007c9190610314565b6100986100d0366004610290565b6101ad565b6000545b92915050565b60018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690810180546001600160a01b039586166001600160a01b031991821617909155825480840190935591018054929093169116179055565b600055565b606060018054806020026020016040519081016040528092919081815260200182805480156101a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610184575b505050505090505b90565b6101b9600183836101be565b505050565b828054828255906000526020600020908101928215610211579160200282015b828111156102115781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906101de565b5061021d929150610221565b5090565b6101aa91905b8082111561021d5780546001600160a01b0319168155600101610227565b80356001600160a01b03811681146100d957600080fd5b6000806040838503121561026e578182fd5b6102788484610245565b91506102878460208501610245565b90509250929050565b600080602083850312156102a2578182fd5b823567ffffffffffffffff808211156102b9578384fd5b81850186601f8201126102ca578485fd5b80359250818311156102da578485fd5b86602080850283010111156102ed578485fd5b60200196919550909350505050565b60006020828403121561030d578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103555783516001600160a01b031683529284019291840191600101610330565b50909695505050505050565b9081526020019056fea2646970667358221220457d5c77332394088e6ab962241918a81250d9089c485cc1bcfdbf9ce5d85d4464736f6c63430006090033";
