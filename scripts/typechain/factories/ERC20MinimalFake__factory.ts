/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20MinimalFake } from "../ERC20MinimalFake";

export class ERC20MinimalFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC20MinimalFake> {
    return super.deploy(overrides || {}) as Promise<ERC20MinimalFake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20MinimalFake {
    return super.attach(address) as ERC20MinimalFake;
  }
  connect(signer: Signer): ERC20MinimalFake__factory {
    return super.connect(signer) as ERC20MinimalFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20MinimalFake {
    return new Contract(address, _abi, signerOrProvider) as ERC20MinimalFake;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    name: "initializeERC20MinimalFake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bb5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146100fc578063a457c2d71461010f578063a9059cbb14610122578063b5d25dcb14610135578063dd62ed3e1461014a57610093565b8063095ea7b31461009857806318160ddd146100c157806323b872dd146100d657806339509351146100e9575b600080fd5b6100ab6100a636600461084d565b61015d565b6040516100b8919061088f565b60405180910390f35b6100c961017b565b6040516100b89190610aee565b6100ab6100e436600461080d565b610181565b6100ab6100f736600461084d565b61020e565b6100c961010a3660046107be565b610262565b6100ab61011d36600461084d565b61027d565b6100ab61013036600461084d565b6102eb565b610148610143366004610877565b6102ff565b005b6100c96101583660046107d9565b6103a5565b600061017161016a6103d0565b84846103d4565b5060015b92915050565b60675490565b600061018e8484846104d4565b6102048461019a6103d0565b6101ff85604051806060016040528060288152602001610b33602891396001600160a01b038a166000908152606660205260408120906101d86103d0565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6105f516565b6103d4565b5060019392505050565b600061017161021b6103d0565b846101ff856066600061022c6103d0565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61062116565b6001600160a01b031660009081526065602052604090205490565b600061017161028a6103d0565b846101ff85604051806060016040528060258152602001610b5b60259139606660006102b46103d0565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6105f516565b60006101716102f86103d0565b84846104d4565b600054610100900460ff1680610318575061031861064d565b80610326575060005460ff16155b61034b5760405162461bcd60e51b8152600401610342906109e0565b60405180910390fd5b600054610100900460ff16158015610376576000805460ff1961ff0019909116610100171660011790555b61037e610653565b61038f6103896103d0565b836106d6565b80156103a1576000805461ff00191690555b5050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103fa5760405162461bcd60e51b815260040161034290610a73565b6001600160a01b0382166104205760405162461bcd60e51b815260040161034290610930565b6001600160a01b038084166000908152606660209081526040808320938616835292905220541580610450575080155b61046c5760405162461bcd60e51b8152600401610342906109a9565b6001600160a01b0380841660008181526066602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c7908590610aee565b60405180910390a3505050565b6001600160a01b0383166104fa5760405162461bcd60e51b815260040161034290610a2e565b6001600160a01b0382166105205760405162461bcd60e51b8152600401610342906108ed565b61052b8383836107a2565b61056e81604051806060016040528060268152602001610b0d602691396001600160a01b038616600090815260656020526040902054919063ffffffff6105f516565b6001600160a01b0380851660009081526065602052604080822093909355908416815220546105a3908263ffffffff61062116565b6001600160a01b0380841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104c7908590610aee565b600081848411156106195760405162461bcd60e51b8152600401610342919061089a565b505050900390565b6000828201838110156106465760405162461bcd60e51b815260040161034290610972565b9392505050565b303b1590565b600054610100900460ff168061066c575061066c61064d565b8061067a575060005460ff16155b6106965760405162461bcd60e51b8152600401610342906109e0565b600054610100900460ff161580156106c1576000805460ff1961ff0019909116610100171660011790555b80156106d3576000805461ff00191690555b50565b6001600160a01b0382166106fc5760405162461bcd60e51b815260040161034290610ab7565b610708600083836107a2565b60675461071b908263ffffffff61062116565b6067556001600160a01b038216600090815260656020526040902054610747908263ffffffff61062116565b6001600160a01b0383166000818152606560205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610796908590610aee565b60405180910390a35050565b505050565b80356001600160a01b038116811461017557600080fd5b6000602082840312156107cf578081fd5b61064683836107a7565b600080604083850312156107eb578081fd5b6107f584846107a7565b915061080484602085016107a7565b90509250929050565b600080600060608486031215610821578081fd5b833561082c81610af7565b9250602084013561083c81610af7565b929592945050506040919091013590565b6000806040838503121561085f578182fd5b61086984846107a7565b946020939093013593505050565b600060208284031215610888578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156108c6578581018301518582016040015282016108aa565b818111156108d75783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f45524332303a20617070726f7665206e6f6e207a65726f20616d6f756e740000604082015260600190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b6001600160a01b03811681146106d357600080fdfe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122056b6460ee6a6c7ba813be3b7a7a35de7dcef163068b3843a74ae573e7ec31da364736f6c63430006090033";
