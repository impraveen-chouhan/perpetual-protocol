/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ChainlinkAggregatorMock } from "../ChainlinkAggregatorMock";

export class ChainlinkAggregatorMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ChainlinkAggregatorMock> {
    return super.deploy(overrides || {}) as Promise<ChainlinkAggregatorMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainlinkAggregatorMock {
    return super.attach(address) as ChainlinkAggregatorMock;
  }
  connect(signer: Signer): ChainlinkAggregatorMock__factory {
    return super.connect(signer) as ChainlinkAggregatorMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkAggregatorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainlinkAggregatorMock;
  }
}

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "_answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "_startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "_answeredInRound",
        type: "uint80",
      },
    ],
    name: "mockAddAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610437806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630cc6be4e14610067578063313ce567146100ab57806354fd4d50146100c95780637284e416146100e35780639a6fc8f514610160578063feaf968c146101c2575b600080fd5b6100a9600480360360a081101561007d57600080fd5b506001600160501b038135811691602081013591604082013591606081013591608090910135166101ca565b005b6100b36102fd565b6040805160ff9092168252519081900360200190f35b6100d1610302565b60408051918252519081900360200190f35b6100eb610307565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101866004803603602081101561017657600080fd5b50356001600160501b0316610319565b604080516001600160501b0396871681526020810195909552848101939093526060840191909152909216608082015290519081900360a00190f35b610186610327565b600080546001818101835560038083047f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160501b039a8b16600a95849006860261010090810a918202918d021990921617909155825480840184557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60198909855600280548084019091557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0196909655855480820187557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01949094556004805494850181559091528383047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054928716949093060290930a9182029190930219909116179055565b600890565b600090565b60408051602081019091526000815290565b506000908190819081908190565b60008060008060008060016000805490500390506000818154811061034857fe5b9060005260206000209060039182820401919006600a029054906101000a90046001600160501b03166001828154811061037e57fe5b90600052602060002001546002838154811061039657fe5b9060005260206000200154600384815481106103ae57fe5b9060005260206000200154600485815481106103c657fe5b9060005260206000209060039182820401919006600a029054906101000a90046001600160501b03169550955095509550955050909192939456fea264697066735822122053579b21cf6ce5f85022a745a82e6dfac8719a5cf7c31c03b85a5d01bacb554564736f6c63430006090033";
