/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TraderWallet } from "../TraderWallet";

export class TraderWallet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _clearingHouse: string,
    _token: string,
    overrides?: Overrides
  ): Promise<TraderWallet> {
    return super.deploy(
      _clearingHouse,
      _token,
      overrides || {}
    ) as Promise<TraderWallet>;
  }
  getDeployTransaction(
    _clearingHouse: string,
    _token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_clearingHouse, _token, overrides || {});
  }
  attach(address: string): TraderWallet {
    return super.attach(address) as TraderWallet;
  }
  connect(signer: Signer): TraderWallet__factory {
    return super.connect(signer) as TraderWallet__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TraderWallet {
    return new Contract(address, _abi, signerOrProvider) as TraderWallet;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ClearingHouseFake",
        name: "_clearingHouse",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "clearingHouse",
    outputs: [
      {
        internalType: "contract ClearingHouseFake",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TraderWallet.ActionType",
        name: "_action1",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_setRestriction",
        type: "bool",
      },
      {
        internalType: "enum TraderWallet.ActionType",
        name: "_action2",
        type: "uint8",
      },
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
      {
        internalType: "enum ClearingHouse.Side",
        name: "_side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_leverage",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_baseAssetAmountLimit",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "multiActions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
      {
        internalType: "enum ClearingHouse.Side",
        name: "_side",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_quoteAssetAmount",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_leverage",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_minBaseAssetAmount",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader3",
        type: "address",
      },
    ],
    name: "threeLiquidations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Amm",
        name: "_amm",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trader2",
        type: "address",
      },
    ],
    name: "twoLiquidations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bb2380380610bb283398101604081905261002f916100fb565b600080546001600160a01b0319166001600160a01b03848116919091179182905560405163095ea7b360e01b81528382169263095ea7b39261007a9291169060001990600401610134565b602060405180830381600087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cc91906100d4565b505050610165565b6000602082840312156100e5578081fd5b815180151581146100f4578182fd5b9392505050565b6000806040838503121561010d578081fd5b82516101188161014d565b60208401519092506101298161014d565b809150509250929050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038116811461016257600080fd5b50565b610a3e806101746000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063893d242d1161005b578063893d242d146100c85780639e02076e146100db578063b5be520d146100ee578063f2a6b510146101015761007d565b80630af96800146100825780632f86e2dd146100a057806386b9d81f146100b5575b600080fd5b61008a610114565b6040516100979190610916565b60405180910390f35b6100b36100ae3660046106b2565b610123565b005b6100b36100c33660046106d5565b61018f565b6100b36100d63660046107b2565b6101f7565b6100b36100e936600461081d565b610268565b6100b36100fc366004610757565b61031f565b6100b361010f36600461070d565b610451565b6000546001600160a01b031681565b6000546001600160a01b031663a8c1b0bc8261013d61051e565b6040518363ffffffff1660e01b815260040161015a9291906109bc565b600060405180830381600087803b15801561017457600080fd5b505af1158015610188573d6000803e3d6000fd5b5050505050565b6000546040516386b9d81f60e01b81526001600160a01b03909116906386b9d81f906101c1908590859060040161092a565b600060405180830381600087803b1580156101db57600080fd5b505af11580156101ef573d6000803e3d6000fd5b505050505050565b60005460405163893d242d60e01b81526001600160a01b039091169063893d242d9061022f9088908890889088908890600401610944565b600060405180830381600087803b15801561024957600080fd5b505af115801561025d573d6000803e3d6000fd5b505050505050505050565b6102a189878761027d368990038901896108d9565b61028c368990038901896108d9565b61029b368990038901896108d9565b87610539565b871561030a576000546040516310b6e44b60e01b81526001600160a01b03909116906310b6e44b906102d7908990600401610916565b600060405180830381600087803b1580156102f157600080fd5b505af1158015610305573d6000803e3d6000fd5b505050505b61025d87878761027d368990038901896108d9565b6000546040516386b9d81f60e01b81526001600160a01b03909116906386b9d81f90610351908790879060040161092a565b600060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b50506000546040516386b9d81f60e01b81526001600160a01b0390911692506386b9d81f91506103b5908790869060040161092a565b600060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b50506000546040516386b9d81f60e01b81526001600160a01b0390911692506386b9d81f9150610419908790859060040161092a565b600060405180830381600087803b15801561043357600080fd5b505af1158015610447573d6000803e3d6000fd5b5050505050505050565b6000546040516386b9d81f60e01b81526001600160a01b03909116906386b9d81f90610483908690869060040161092a565b600060405180830381600087803b15801561049d57600080fd5b505af11580156104b1573d6000803e3d6000fd5b50506000546040516386b9d81f60e01b81526001600160a01b0390911692506386b9d81f91506104e7908690859060040161092a565b600060405180830381600087803b15801561050157600080fd5b505af1158015610515573d6000803e3d6000fd5b50505050505050565b610526610688565b5060408051602081019091526000815290565b600087600281111561054757fe5b14156105bc5760005460405163893d242d60e01b81526001600160a01b039091169063893d242d906105859089908990899089908990600401610980565b600060405180830381600087803b15801561059f57600080fd5b505af11580156105b3573d6000803e3d6000fd5b50505050610515565b60018760028111156105ca57fe5b1415610607576000546001600160a01b031663a8c1b0bc876105ea61051e565b6040518363ffffffff1660e01b81526004016105859291906109bc565b600287600281111561061557fe5b1415610515576000546040516386b9d81f60e01b81526001600160a01b03909116906386b9d81f9061064d908990859060040161092a565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b5050505050505050505050565b6040518060200160405280600081525090565b6000602082840312156106ac578081fd5b50919050565b6000602082840312156106c3578081fd5b81356106ce816109d6565b9392505050565b600080604083850312156106e7578081fd5b82356106f2816109d6565b91506020830135610702816109d6565b809150509250929050565b600080600060608486031215610721578081fd5b833561072c816109d6565b9250602084013561073c816109d6565b9150604084013561074c816109d6565b809150509250925092565b6000806000806080858703121561076c578081fd5b8435610777816109d6565b93506020850135610787816109d6565b92506040850135610797816109d6565b915060608501356107a7816109d6565b939692955090935050565b600080600080600060a086880312156107c9578081fd5b85356107d4816109d6565b945060208601356107e4816109fb565b93506107f3876040880161069b565b9250610802876060880161069b565b9150610811876080880161069b565b90509295509295909350565b60008060008060008060008060006101208a8c03121561083b578384fd5b8935610846816109ee565b985060208a0135801515811461085a578485fd5b975060408a013561086a816109ee565b965060608a013561087a816109d6565b955060808a013561088a816109fb565b94506108998b60a08c0161069b565b93506108a88b60c08c0161069b565b92506108b78b60e08c0161069b565b91506101008a01356108c8816109d6565b809150509295985092959850929598565b6000602082840312156108ea578081fd5b6040516020810181811067ffffffffffffffff82111715610909578283fd5b6040529135825250919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b038616815260a081016002861061095e57fe5b6020820195909552923560408401529035606083015235608090910152919050565b6001600160a01b038616815260a081016002861061099a57fe5b6020820195909552925160408401529051606083015251608090910152919050565b6001600160a01b0392909216825251602082015260400190565b6001600160a01b03811681146109eb57600080fd5b50565b600381106109eb57600080fd5b600281106109eb57600080fdfea264697066735822122006ee2fec9bd88ffa60b712d4b0e514d58d2ff01e4170383ffdba52a10a602e9b64736f6c63430006090033";
