/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SignedDecimalFake } from "../SignedDecimalFake";

export class SignedDecimalFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SignedDecimalFake> {
    return super.deploy(overrides || {}) as Promise<SignedDecimalFake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedDecimalFake {
    return super.attach(address) as SignedDecimalFake;
  }
  connect(signer: Signer): SignedDecimalFake__factory {
    return super.connect(signer) as SignedDecimalFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedDecimalFake {
    return new Contract(address, _abi, signerOrProvider) as SignedDecimalFake;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "y",
        type: "tuple",
      },
    ],
    name: "div",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "z",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "x",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "divScalar",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "z",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "x",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "y",
        type: "tuple",
      },
    ],
    name: "mul",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "z",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "x",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "mulScalar",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "d",
            type: "int256",
          },
        ],
        internalType: "struct SignedDecimal.signedDecimal",
        name: "z",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104a8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c6f25531461005157806330d0816f1461007a57806333fc7d111461008d578063cc9dbfde146100a0575b600080fd5b61006461005f366004610377565b6100b3565b6040516100719190610468565b60405180910390f35b61006461008836600461034d565b6100d2565b61006461009b36600461034d565b6100ea565b6100646100ae366004610377565b610102565b6100bb6102fd565b6100cb838363ffffffff61011a16565b9392505050565b6100da6102fd565b6100cb838363ffffffff61014816565b6100f26102fd565b6100cb838363ffffffff61016a16565b61010a6102fd565b6100cb838363ffffffff61018c16565b6101226102fd565b61012a6102fd565b8251845161013d9163ffffffff6101af16565b815290505b92915050565b6101506102fd565b6101586102fd565b835161013d908463ffffffff6101bd16565b6101726102fd565b61017a6102fd565b835161013d908463ffffffff61023116565b6101946102fd565b61019c6102fd565b8251845161013d9163ffffffff61029516565b60006100cb838360126102a3565b6000826101cc57506000610142565b826000191480156101e05750600160ff1b82145b156102065760405162461bcd60e51b81526004016101fd906103ec565b60405180910390fd5b8282028284828161021357fe5b05146100cb5760405162461bcd60e51b81526004016101fd906103ec565b6000816102505760405162461bcd60e51b81526004016101fd90610433565b816000191480156102645750600160ff1b83145b156102815760405162461bcd60e51b81526004016101fd906103ab565b600082848161028c57fe5b05949350505050565b60006100cb838360126102d5565b60006102cd6102b1836102f4565b6102c1868663ffffffff6101bd16565b9063ffffffff61023116565b949350505050565b60006102cd836102c16102e7856102f4565b879063ffffffff6101bd16565b60ff16600a0a90565b6040518060200160405280600081525090565b600060208284031215610321578081fd5b6040516020810181811067ffffffffffffffff82111715610340578283fd5b6040529135825250919050565b6000806040838503121561035f578182fd5b6103698484610310565b946020939093013593505050565b60008060408385031215610389578081fd5b6103938484610310565b91506103a28460208501610310565b90509250929050565b60208082526021908201527f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526027908201527f5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f604082015266766572666c6f7760c81b606082015260800190565b6020808252818101527f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f604082015260600190565b905181526020019056fea26469706673582212200c0707d566719aca26dd54cd50fa94127b1bf5ea95cb949e63616ec503a65ae264736f6c63430006090033";
