/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PerpRewardVestingFake } from "../PerpRewardVestingFake";

export class PerpRewardVestingFake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PerpRewardVestingFake> {
    return super.deploy(overrides || {}) as Promise<PerpRewardVestingFake>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PerpRewardVestingFake {
    return super.attach(address) as PerpRewardVestingFake;
  }
  connect(signer: Signer): PerpRewardVestingFake__factory {
    return super.connect(signer) as PerpRewardVestingFake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpRewardVestingFake {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PerpRewardVestingFake;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "claimStatus",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedBalance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimWeek",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "week",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct MerkleRedeemUpgradeSafe.Claim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimWeeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLengthOfMerkleRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vestingPeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRootIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRootTimestampMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mock_getCurrentTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_number",
        type: "uint256",
      },
    ],
    name: "mock_setBlockNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "mock_setBlockTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_totalAllocation",
        type: "uint256",
      },
    ],
    name: "seedAllocations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedBalance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyClaim",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weekMerkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052635611c230610135556127116101365534801561002057600080fd5b506116b5806100306000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637313ee5a116100c3578063cd6dc6871161007c578063cd6dc68714610288578063dd8c9c9d1461029b578063e2bd3e35146102ae578063eb0d07f5146102c1578063f373579f146102d4578063fc0c546a146102e75761014c565b80637313ee5a146102425780638da5cb5b1461024a5780639432665a14610252578063bc5920ba14610265578063c77f7c611461026d578063c804c39a146102755761014c565b806339436b001161011557806339436b00146101bf57806347fb23c1146101df5780634cd488ab146101ff57806358b4e4b4146102125780636c8381f814610225578063715018a61461023a5761014c565b8062c141b6146101515780630933838314610166578063120aa8771461018457806313af4035146101a457806339144f50146101b7575b600080fd5b61016461015f36600461116b565b6102ef565b005b61016e6102f5565b60405161017b91906112d8565b60405180910390f35b610197610192366004611183565b610304565b60405161017b91906112cd565b6101646101b2366004610f87565b610324565b61016e610406565b6101d26101cd3660046111dd565b61040d565b60405161017b9190611295565b6101f26101ed36600461108b565b6104a1565b60405161017b919061124f565b61016461020d3660046111b2565b610555565b6101646102203660046110bf565b6105fa565b61022d61065c565b60405161017b91906111fe565b61016461066b565b61016e6106ea565b61022d6106f1565b61016461026036600461116b565b610700565b610164610706565b61016e6107c9565b610164610283366004610fa3565b6107d3565b610164610296366004611140565b61083d565b61016e6102a936600461116b565b6108f6565b61016e6102bc36600461116b565b610908565b6101976102cf3660046110bf565b61091b565b61016e6102e236600461116b565b610925565b61022d610944565b61013655565b60006102ff610953565b905090565b609a60209081526000928352604080842090915290825290205460ff1681565b61032c61095a565b6065546001600160a01b039081169116146103625760405162461bcd60e51b815260040161035990611590565b60405180910390fd5b6001600160a01b0381166103885760405162461bcd60e51b815260040161035990611426565b6065546001600160a01b03828116911614156103b65760405162461bcd60e51b8152600401610359906115dd565b6066546001600160a01b03828116911614156103e45760405162461bcd60e51b815260040161035990611348565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6101015490565b6060828203600101818167ffffffffffffffff8111801561042d57600080fd5b50604051908082528060200260200182016040528015610457578160200160208202803683370190505b50905060005b8281101561049857858101600090815260996020526040902054825183908390811061048557fe5b602090810291909101015260010161045d565b50949350505050565b6060828203600101818167ffffffffffffffff811180156104c157600080fd5b506040519080825280602002602001820160405280156104eb578160200160208202803683370190505b50905060005b8281101561054b578581016000908152609a602090815260408083206001600160a01b038b168452909152902054825160ff9091169083908390811061053357fe5b911515602092830291909101909101526001016104f1565b5095945050505050565b61055d61095a565b6065546001600160a01b0390811691161461058a5760405162461bcd60e51b815260040161035990611590565b61059583838361095e565b6105b0610102546105a4610a3e565b9063ffffffff610a4516565b60008481526101006020526040812091909155610101805460018101825591527f109ea3cebb188b9c1b9fc5bb3920be60dfdc8699098dff92f3d80daaca74768901929092555050565b60008381526101006020526040902054610612610a3e565b1015801561062e57506000838152610100602052604090205415155b61064a5760405162461bcd60e51b8152600401610359906113d6565b61065684848484610a71565b50505050565b6066546001600160a01b031690565b61067361095a565b6065546001600160a01b039081169116146106a05760405162461bcd60e51b815260040161035990611590565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6101025481565b6065546001600160a01b031690565b61013555565b6066546001600160a01b031661072e5760405162461bcd60e51b815260040161035990611541565b61073661095a565b6066546001600160a01b039081169116146107635760405162461bcd60e51b81526004016103599061138f565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b60006102ff610a3e565b60005b815181101561083857610830838383815181106107ef57fe5b60200260200101516000015184848151811061080757fe5b60200260200101516020015185858151811061081f57fe5b6020026020010151604001516105fa565b6001016107d6565b505050565b600054610100900460ff16806108565750610856610b13565b80610864575060005460ff16155b6108805760405162461bcd60e51b815260040161035990611468565b600054610100900460ff161580156108ab576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0383166108d15760405162461bcd60e51b8152600401610359906114b6565b6108da83610b19565b6101028290558015610838576000805461ff0019169055505050565b60996020526000908152604090205481565b6101006020526000908152604090205481565b6001949350505050565b610101818154811061093357fe5b600091825260209091200154905081565b609b546001600160a01b031681565b6101365490565b3390565b6000838152609960205260409020541561098a5760405162461bcd60e51b81526004016103599061150a565b60008381526099602052604090819020839055609b5490516323b872dd60e01b81526001600160a01b03909116906323b872dd906109d090339030908690600401611212565b602060405180830381600087803b1580156109ea57600080fd5b505af11580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190611120565b6108385760405162461bcd60e51b8152600401610359906114dd565b6101355490565b600082820183811015610a6a5760405162461bcd60e51b815260040161035990611311565b9392505050565b6000838152609a602090815260408083206001600160a01b038816845290915290205460ff1615610ab45760405162461bcd60e51b8152600401610359906113fd565b610ac08484848461091b565b610adc5760405162461bcd60e51b8152600401610359906112e1565b6000838152609a602090815260408083206001600160a01b03881684529091529020805460ff191660011790556106568483610bae565b303b1590565b600054610100900460ff1680610b325750610b32610b13565b80610b40575060005460ff16155b610b5c5760405162461bcd60e51b815260040161035990611468565b600054610100900460ff16158015610b87576000805460ff1961ff0019909116610100171660011790555b610b8f610c8d565b610b9882610d20565b8015610baa576000805461ff00191690555b5050565b8015610baa577fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8282604051610be5929190611236565b60405180910390a1609b5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610c1f9085908590600401611236565b602060405180830381600087803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190611120565b610baa5760405162461bcd60e51b8152600401610359906114dd565b600054610100900460ff1680610ca65750610ca6610b13565b80610cb4575060005460ff16155b610cd05760405162461bcd60e51b815260040161035990611468565b600054610100900460ff16158015610cfb576000805460ff1961ff0019909116610100171660011790555b610d03610dbe565b610d0b610e3f565b8015610d1d576000805461ff00191690555b50565b600054610100900460ff1680610d395750610d39610b13565b80610d47575060005460ff16155b610d635760405162461bcd60e51b815260040161035990611468565b600054610100900460ff16158015610d8e576000805460ff1961ff0019909116610100171660011790555b609b80546001600160a01b0319166001600160a01b0384161790558015610baa576000805461ff00191690555050565b600054610100900460ff1680610dd75750610dd7610b13565b80610de5575060005460ff16155b610e015760405162461bcd60e51b815260040161035990611468565b600054610100900460ff16158015610d0b576000805460ff1961ff0019909116610100171660011790558015610d1d576000805461ff001916905550565b600054610100900460ff1680610e585750610e58610b13565b80610e66575060005460ff16155b610e825760405162461bcd60e51b815260040161035990611468565b600054610100900460ff16158015610ead576000805460ff1961ff0019909116610100171660011790555b6000610eb761095a565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610d1d576000805461ff001916905550565b600082601f830112610f29578081fd5b8135610f3c610f378261164a565b611623565b818152915060208083019084810181840286018201871015610f5d57600080fd5b60005b84811015610f7c57813584529282019290820190600101610f60565b505050505092915050565b600060208284031215610f98578081fd5b8135610a6a8161166a565b60008060408385031215610fb5578081fd5b8235610fc08161166a565b915060208381013567ffffffffffffffff80821115610fdd578384fd5b81860187601f820112610fee578485fd5b80359250610ffe610f378461164a565b83815284810190828601875b8681101561107a57813585016060818e03601f1901121561102957898afd5b6110336060611623565b89820135815260408201358a820152606082013588811115611053578b8cfd5b6110618f8c83860101610f19565b604083015250855250928701929087019060010161100a565b50979a909950975050505050505050565b60008060006060848603121561109f578081fd5b83356110aa8161166a565b95602085013595506040909401359392505050565b600080600080608085870312156110d4578081fd5b84356110df8161166a565b93506020850135925060408501359150606085013567ffffffffffffffff811115611108578182fd5b61111487828801610f19565b91505092959194509250565b600060208284031215611131578081fd5b81518015158114610a6a578182fd5b60008060408385031215611152578182fd5b823561115d8161166a565b946020939093013593505050565b60006020828403121561117c578081fd5b5035919050565b60008060408385031215611195578182fd5b8235915060208301356111a78161166a565b809150509250929050565b6000806000606084860312156111c6578283fd5b505081359360208301359350604090920135919050565b600080604083850312156111ef578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b8181101561128957835115158352928401929184019160010161126b565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611289578351835292840192918401916001016112b1565b901515815260200190565b90815260200190565b60208082526016908201527524b731b7b93932b1ba1036b2b935b63290383937b7b360511b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b6020808252600d908201526c496e76616c696420636c61696d60981b604082015260600190565b6020808252600f908201526e436c61696d656420616c726561647960881b604082015260600190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600d908201526c125b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b6020808252601a908201527f63616e6e6f742072657772697465206d65726b6c6520726f6f74000000000000604082015260600190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b60405181810167ffffffffffffffff8111828210171561164257600080fd5b604052919050565b600067ffffffffffffffff821115611660578081fd5b5060209081020190565b6001600160a01b0381168114610d1d57600080fdfea2646970667358221220a894a65821654b7877bc4d16ccaad26bb57327357389f42a2ba10d6e49e10c4864736f6c63430006090033";
