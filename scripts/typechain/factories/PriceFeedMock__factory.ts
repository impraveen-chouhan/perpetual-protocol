/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PriceFeedMock } from "../PriceFeedMock";

export class PriceFeedMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_price: BigNumberish, overrides?: Overrides): Promise<PriceFeedMock> {
    return super.deploy(_price, overrides || {}) as Promise<PriceFeedMock>;
  }
  getDeployTransaction(
    _price: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_price, overrides || {});
  }
  attach(address: string): PriceFeedMock {
    return super.attach(address) as PriceFeedMock;
  }
  connect(signer: Signer): PriceFeedMock__factory {
    return super.connect(signer) as PriceFeedMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceFeedMock {
    return new Contract(address, _abi, signerOrProvider) as PriceFeedMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101073803806101078339818101604052602081101561003357600080fd5b505160005560c1806100466000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806331d98b3f14603757806391b7f5ed146063575b600080fd5b605160048036036020811015604b57600080fd5b5035607f565b60408051918252519081900360200190f35b607d60048036036020811015607757600080fd5b50356086565b005b5060005490565b60005556fea264697066735822122026c43abe6e9adc3bf29b730c389e9c0103ce3b661e1916f16b0717c5e8f6227f64736f6c63430006090033";
