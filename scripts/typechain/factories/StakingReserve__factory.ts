/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakingReserve } from "../StakingReserve";

export class StakingReserve__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StakingReserve> {
    return super.deploy(overrides || {}) as Promise<StakingReserve>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingReserve {
    return super.attach(address) as StakingReserve;
  }
  connect(signer: Signer): StakingReserve__factory {
    return super.connect(signer) as StakingReserve__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingReserve {
    return new Contract(address, _abi, signerOrProvider) as StakingReserve;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "FeeInEpoch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFeesAndVestedReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "depositAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "epochRewardHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "perpReward",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "feeMap",
    outputs: [
      {
        internalType: "uint256",
        name: "d",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeNotifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "feeTokens",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEpochRewardHistoryLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getFeeEpochCursor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getFeeOfEpoch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getFeeRevenue",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "balance",
            type: "tuple",
          },
        ],
        internalType: "struct StakingReserve.FeeBalance[]",
        name: "feeBalance",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochIndex",
        type: "uint256",
      },
    ],
    name: "getLockedBalance",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exist",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "locked",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "d",
                type: "uint256",
              },
            ],
            internalType: "struct Decimal.decimal",
            name: "timeWeightedLocked",
            type: "tuple",
          },
        ],
        internalType: "struct StakingReserve.LockedBalance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getRewardEpochCursor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epochIndex",
        type: "uint256",
      },
    ],
    name: "getTotalEffectiveStake",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnlockedBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getUnstakableBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getVestedReward",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "reward",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_perpToken",
        type: "address",
      },
      {
        internalType: "contract SupplySchedule",
        name: "_supplySchedule",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeNotifier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_vestingPeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "isExistedFeeToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEpochIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "notifyTokenAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perpToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsDistribution",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_notifier",
        type: "address",
      },
    ],
    name: "setFeeNotifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
    ],
    name: "setRewardsDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vestingPeriod",
        type: "uint256",
      },
    ],
    name: "setVestingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakeBalanceMap",
    outputs: [
      {
        internalType: "bool",
        name: "exist",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "totalBalance",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "rewardEpochCursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeEpochCursor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
        ],
        internalType: "struct Decimal.decimal",
        name: "_amount",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506135e8806100206000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80635cdd7c701161013b578063a63a5e76116100b8578063cfc90c321161007c578063cfc90c32146104a5578063d7058d8d146104b8578063fc0c546a146104cb578063fd5e6dd1146104d3578063ff59f86d146104e65761023d565b8063a63a5e761461045c578063a7d4b2d314610464578063ac04f24314610477578063bc5920ba1461048a578063cf756fdf146104925761023d565b80637313ee5a116100ff5780637313ee5a1461041e5780638da5cb5b146104265780638ef4403c1461042e5780638f0a270e146104415780639cadb3a0146104545761023d565b80635cdd7c70146103c85780636a3662f1146103db5780636c8381f8146103ee57806370c88be8146103f6578063715018a6146104165761023d565b8063141eea7f116101c957806336b4402a1161018d57806336b4402a146103575780633ee7a5ce1461037a5780633fc6df6e1461038d57806340bee0ed1461039557806341daeb24146103a85761023d565b8063141eea7f1461031457806316c2f69f1461032957806319762143146103315780631c17820314610344578063239e1d67146103295761023d565b80630cd61a0c116102105780630cd61a0c146102b35780630dc095cf146102d3578063129de5bf146102e657806312b58349146102f957806313af4035146103015761023d565b806301bb7d9c1461024257806303e16d421461025757806304aa4487146102805780630a8d9b67146102a0575b600080fd5b610255610250366004612d23565b6104f9565b005b61026a610265366004612c37565b610696565b6040516102779190613535565b60405180910390f35b61029361028e366004612d7b565b6106a9565b604051610277919061352b565b6102556102ae366004612cee565b6106d9565b6102c66102c1366004612c37565b610802565b6040516102779190612ec1565b6102936102e1366004612dab565b610861565b6102936102f4366004612c37565b6108b6565b610293610919565b61025561030f366004612c37565b610951565b61031c610a2a565b6040516102779190612df6565b61026a610a3a565b61025561033f366004612c37565b610a41565b610255610352366004612d23565b610a98565b61036a610365366004612c37565b610b08565b6040516102779493929190612ecc565b610255610388366004612d23565b610b40565b61031c610c84565b6102556103a3366004612d7b565b610c93565b6103bb6103b6366004612c37565b610cce565b6040516102779190612e68565b6102556103d6366004612c37565b610f0f565b61026a6103e9366004612c37565b610f67565b61031c610f86565b610409610404366004612ca3565b610f95565b6040516102779190613506565b61025561105b565b61026a6110da565b61031c6110e1565b61031c61043c366004612d7b565b6110f0565b61026a61044f366004612c37565b611118565b61031c611137565b610255611147565b610293610472366004612c37565b611326565b610255610485366004612d3e565b6114c0565b6102556118db565b6102556104a0366004612c53565b61199e565b6102936104b3366004612d7b565b611a7b565b6102936104c6366004612c37565b611aa6565b61031c611ac9565b61031c6104e1366004612d7b565b611ad9565b6102556104f4366004612d23565b611ae7565b600061051261050d36849003840184612d3e565b611d1b565b116105385760405162461bcd60e51b815260040161052f90612fc0565b60405180910390fd5b6000610542611d1f565b905061055061050d82611aa6565b61056261050d36859003850185612d3e565b11156105805760405162461bcd60e51b815260040161052f9061312a565b600061059b600161058f610a3a565b9063ffffffff611d2316565b90506105a5612bbc565b6105af8383610f95565b604080516060810190915260018152909150602081016105e86105d736889003880188612d3e565b60208501519063ffffffff611d4816565b81526020016106106105ff36889003880188612d3e565b60408501519063ffffffff611d4816565b90526001600160a01b0384166000908152610165602090815260408083208684526004018252918290208351815460ff1916901515178155908301515160018201559101515160029091015561068b61066e36869003860186612d3e565b60408051602081019091526101635481529063ffffffff611d7416565b516101635550505050565b61016c6020526000908152604090205481565b61016781815481106106b757fe5b6000918252602091829020604080519384019052600290910201548152905081565b6106e1611d1f565b61016d546001600160a01b0390811691161461070f5760405162461bcd60e51b815260040161052f906132a8565b600061072361050d36849003840184612d3e565b116107405760405162461bcd60e51b815260040161052f906132ce565b61078761075236839003830183612d3e565b6001600160a01b038416600090815261016c60209081526040918290208251918201909252905481529063ffffffff611de916565b6001600160a01b038316600090815261016c60205260409020905190556107ad82610802565b6107fe5761016b80546001810182556000919091527f45c4c4b2842a4a2a717cf0ddf6c6d1dee52b7fd8d9da97eb519765c7a27020f40180546001600160a01b0319166001600160a01b0384161790555b5050565b6000805b61016b5481101561085657826001600160a01b031661016b828154811061082957fe5b6000918252602090912001546001600160a01b0316141561084e57600191505061085c565b600101610806565b50600090505b919050565b610869612bea565b610167838154811061087757fe5b600091825260208083206001600160a01b0386168452600160029093020191909101815260409182902082519182019092529054815290505b92915050565b6108be612bea565b6108c6612bea565b6108d283610404610a3a565b6020908101516001600160a01b0385166000908152610165835260409081902081519384019091526001015482529150610912908263ffffffff611d4816565b9392505050565b610921612bea565b610166600061092e610a3a565b815260208082019290925260409081016000208151928301909152548152905090565b610959611d1f565b6065546001600160a01b039081169116146109865760405162461bcd60e51b815260040161052f9061343c565b6001600160a01b0381166109ac5760405162461bcd60e51b815260040161052f90613218565b6065546001600160a01b03828116911614156109da5760405162461bcd60e51b815260040161052f906134c0565b6066546001600160a01b0382811691161415610a085760405162461bcd60e51b815260040161052f90612fee565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b61016d546001600160a01b031681565b6101675490565b610a49611d1f565b6065546001600160a01b03908116911614610a765760405162461bcd60e51b815260040161052f9061343c565b609980546001600160a01b0319166001600160a01b0392909216919091179055565b6101315460ff16610abb5760405162461bcd60e51b815260040161052f90613489565b610131805460ff19169055610ae5610ad1611d1f565b610ae036849003840184612d3e565b611e0c565b610af761048536839003830183612d3e565b50610131805460ff19166001179055565b610165602090815260009182526040918290208054835192830190935260018101548252600281015460039091015460ff9093169284565b6101315460ff16610b635760405162461bcd60e51b815260040161052f90613489565b610131805460ff19169055610b8061050d36839003830183612d3e565b610b9c5760405162461bcd60e51b815260040161052f90612fc0565b6000610ba6611d1f565b9050610bb461050d826108b6565b610bc661050d36859003850185612d3e565b1115610be45760405162461bcd60e51b815260040161052f906130bd565b610c2f610bf636849003840184612d3e565b6001600160a01b03831660009081526101656020908152604091829020825191820190925260019091015481529063ffffffff611d4816565b6001600160a01b03808316600090815261016560205260409020915160019092019190915561016954610c72911682610c6d36869003860186612d3e565b611efd565b5050610131805460ff19166001179055565b6099546001600160a01b031681565b610c9b611d1f565b6065546001600160a01b03908116911614610cc85760405162461bcd60e51b815260040161052f9061343c565b61016455565b6001600160a01b038116600090815261016560205260409020606090610cf2610a3a565b81600301541415610d03575061085c565b61016b548067ffffffffffffffff81118015610d1e57600080fd5b50604051908082528060200260200182016040528015610d5857816020015b610d45612bfd565b815260200190600190039081610d3d5790505b509250610d63612bea565b60038301545b610d71610a3a565b811015610f0657600081815260048501602090815260409182902082519182019092526002909101548152610da590611d1b565b15610dd15760008181526004850160209081526040918290208251918201909252600290910154815291505b610dda82611d1b565b610de357610efe565b610deb612bea565b60008281526101666020908152604091829020825191820190925290548152610e1b90849063ffffffff61202c16565b905060005b84811015610efb57600061016b8281548110610e3857fe5b6000918252602090912001546001600160a01b03169050610e57612bea565b610e618583610861565b9050610e6c81611d1b565b610e77575050610ef3565b610eb0610e8a828663ffffffff61204f16565b8a8581518110610e9657fe5b602002602001015160200151611de990919063ffffffff16565b898481518110610ebc57fe5b60200260200101516020018190525081898481518110610ed857fe5b60209081029190910101516001600160a01b03909116905250505b600101610e20565b50505b600101610d69565b50505050919050565b610f17611d1f565b6065546001600160a01b03908116911614610f445760405162461bcd60e51b815260040161052f9061343c565b61016d80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03166000908152610165602052604090206002015490565b6066546001600160a01b031690565b610f9d612bbc565b610fa5612bbc565b506001600160a01b0383166000908152610165602090815260408083208584526004018252918290208251606081018452815460ff1615158152835180840185526001830154815281840152835192830184526002909101548252918201528051156110125790506108b0565b8261101d5750611029565b60018303925050610f9d565b6040518060600160405280600015158152602001611045612072565b8152602001611052612072565b90529392505050565b611063611d1f565b6065546001600160a01b039081169116146110905760405162461bcd60e51b815260040161052f9061343c565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b6101645481565b6065546001600160a01b031690565b61016b81815481106110fe57fe5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03166000908152610165602052604090206003015490565b610169546001600160a01b031681565b6101315460ff1661116a5760405162461bcd60e51b815260040161052f90613489565b610131805460ff19169055600061117f611d1f565b9050611189612bea565b61119282611326565b9050606061119f83610cce565b805190915015156000806111b285611d1b565b11905080806111be5750815b6111da5760405162461bcd60e51b815260040161052f906131e1565b610167546001600160a01b038616600090815261016560205260408120600301919091555b835181101561126e5761122884828151811061121757fe5b602002602001015160200151611d1b565b156112665761126684828151811061123c57fe5b6020026020010151600001518786848151811061125557fe5b602002602001015160200151611efd565b6001016111ff565b508080156112825750610164546101675410155b1561131157610164546101675461129e9163ffffffff61208d16565b6001600160a01b0380871660009081526101656020526040902060020191909155610169546112cf91168686611efd565b7f1d3eee4ca001cff39eec6ec7615aacf2f2bd61791273830728ba00ccbd6e1337856112fa86611d1b565b604051611308929190612e2e565b60405180910390a15b5050610131805460ff19166001179055505050565b61132e612bea565b6101645461133a610a3a565b101561134f57611348612072565b905061085c565b600061136c61016454611360610a3a565b9063ffffffff61208d16565b6001600160a01b0384166000908152610165602052604090206002810154919250908210156113a65761139d612072565b9250505061085c565b6113ae612bea565b60028201545b83811015610f06576000818152600484016020908152604091829020825191820190925260029091015481526113e990611d1b565b156114155760008181526004840160209081526040918290208251918201909252600290910154815291505b61141e82611d1b565b611427576114b8565b61142f612bea565b6114a2610166600084815260200190815260200160002060405180602001604052908160008201548152505061149685610167868154811061146d57fe5b60009182526020918290206040805193840190526002909102015481529063ffffffff61204f16565b9063ffffffff61202c16565b90506114b4868263ffffffff611de916565b9550505b6001016113b4565b60006114cb82611d1b565b116114e85760405162461bcd60e51b815260040161052f90612fc0565b60006114f2611d1f565b905061150061050d826108b6565b61150983611d1b565b11156115275760405162461bcd60e51b815260040161052f90612f1b565b61016a60009054906101000a90046001600160a01b03166001600160a01b031663544736e66040518163ffffffff1660e01b815260040160206040518083038186803b15801561157657600080fd5b505afa15801561158a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ae9190612cce565b6115ca5760405162461bcd60e51b815260040161052f906132f9565b61016a546040805163a83ef51560e01b815290516000926001600160a01b03169163a83ef515916004808301926020929190829003018186803b15801561161057600080fd5b505afa158015611624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116489190612d93565b90506000611659600161058f610a3a565b9050600061016a60009054906101000a90046001600160a01b03166001600160a01b0316638c4e8c216040518163ffffffff1660e01b815260040160206040518083038186803b1580156116ac57600080fd5b505afa1580156116c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e49190612d93565b90506116ee612bea565b6116f66120cf565b82111561174a576117358461172961171c61170f6120cf565b869063ffffffff61208d16565b899063ffffffff6120d316565b9063ffffffff6120f516565b905061174a85611743610a3a565b8884612117565b6001600160a01b038516600090815261016560209081526040808320868452600481019092529091205460ff161561178d576117888685898a612117565b61183d565b611795612bbc565b8160040160006117a3610a3a565b815260208082019290925260409081016000908120825160608082018552825460ff16151582528451808701865260018085015482528388019182528651808901885260029586015481529387019390935285519182018652828252805182880190815290518287019081528c865260048a01909752949093209251835460ff191690151517835592515192820192909255915151910155505b61187882610166600061184e610a3a565b8152602080820192909252604090810160002081519283019091525481529063ffffffff611de916565b6101666000611885610a3a565b81526020808201929092526040908101600020925190925581519081019091526101635481526118cd9083906118c1908a63ffffffff6121cc16565b9063ffffffff611d7416565b516101635550505050505050565b6066546001600160a01b03166119035760405162461bcd60e51b815260040161052f906133ed565b61190b611d1f565b6066546001600160a01b039081169116146119385760405162461bcd60e51b815260040161052f90613076565b6066546065546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360668054606580546001600160a01b03199081166001600160a01b03841617909155169055565b600054610100900460ff16806119b757506119b7612237565b806119c5575060005460ff16155b6119e15760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff16158015611a0c576000805460ff1961ff0019909116610100171660011790555b611a1461223d565b611a1c6122d0565b61016980546001600160a01b038088166001600160a01b03199283161790925561016a805487841690831617905561016d8054928616929091169190911790556101648290558015611a74576000805461ff00191690555b5050505050565b611a83612bea565b506000908152610166602090815260409182902082519182019092529054815290565b611aae612bea565b611abf82610404600161058f610a3a565b6020015192915050565b61016e546001600160a01b031681565b61016881815481106110fe57fe5b611aef611d1f565b6099546001600160a01b03908116911614611b1c5760405162461bcd60e51b815260040161052f90613330565b611b24612bea565b611b2c610919565b9050610167604051806020016040528084803603810190611b4d9190612d3e565b9052815460018181018455600093845260208420925151600290920290920155611b7990611360610a3a565b905060005b61016b54811015611c9457600061016b8281548110611b9957fe5b60009182526020808320909101546001600160a01b031680835261016c82526040928390208351928301909352915481529091507f1b97835ae43d7358e1d70d7e50005dc31b89e5e3bf48377750406fa4e6941124908290611bfa90611d1b565b85604051611c0a93929190612e47565b60405180910390a16001600160a01b038116600090815261016c60205260409020610167805485908110611c3a57fe5b600091825260208083206001600160a01b038616845260016002909302019190910190526040902090549055611c6e612072565b6001600160a01b03909116600090815261016c6020526040902090519055600101611b7e565b50611c9d612bea565b6040805160208101909152610163548152611cbe908463ffffffff6121cc16565b90506000611ccb82611d1b565b1215611ce95760405162461bcd60e51b815260040161052f9061312a565b611cf281612346565b6101666000611cff610a3a565b815260208101919091526040016000209051905561068b612072565b5190565b3390565b6000828201838110156109125760405162461bcd60e51b815260040161052f90612f89565b611d50612bea565b611d58612bea565b82518451611d6b9163ffffffff61208d16565b81529392505050565b611d7c612bea565b8180600001516001600160ff1b0310156040518060600160405280603381526020016135806033913990611dc35760405162461bcd60e51b815260040161052f9190612ee8565b50611dcc612bea565b83518551611ddf9163ffffffff61237416565b8152949350505050565b611df1612bea565b611df9612bea565b82518451611d6b9163ffffffff611d2316565b611e1581611d1b565b611e315760405162461bcd60e51b815260040161052f90612fc0565b6001600160a01b038216600090815261016560205260409020805460ff16611eb7576101688054600180820183556000929092527f8077777ae4769de06cbfd1c0b8b1f653b51ec156d91a9aca16a4102f19e03d9e0180546001600160a01b0319166001600160a01b038616179055815460ff1916178155611eb1610a3a565b60028201555b604080516020810190915260018201548152611ed9908363ffffffff611de916565b51600182015561016954611ef8906001600160a01b03168430856123ba565b505050565b611f06836124ec565b611f0e612bea565b611f188484612536565b90506000611f2685846125c3565b905060006060866001600160a01b031663a9059cbb60e01b8785604051602401611f51929190612e2e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611f8f9190612dda565b6000604051808303816000865af19150503d8060008114611fcc576040519150601f19603f3d011682016040523d82523d6000602084013e611fd1565b606091505b5091509150818015611ffb575080511580611ffb575080806020019051810190611ffb9190612cce565b6120175760405162461bcd60e51b815260040161052f90612f52565b61202387878587612641565b50505050505050565b612034612bea565b61203c612bea565b82518451611d6b9163ffffffff61269a16565b612057612bea565b61205f612bea565b82518451611d6b9163ffffffff6126a816565b61207a612bea565b5060408051602081019091526000815290565b600061091283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506126b6565b4290565b6120db612bea565b6120e3612bea565b8351611d6b908463ffffffff6126e216565b6120fd612bea565b612105612bea565b8351611d6b908463ffffffff61271c16565b61211f612bbc565b6121298585610f95565b90506040518060600160405280600115158152602001612156858460200151611de990919063ffffffff16565b8152602001612172848460400151611de990919063ffffffff16565b90526001600160a01b039590951660009081526101656020908152604080832096835260049096018152908590208651815460ff191690151517815590860151516001820155939094015151600290930192909255505050565b6121d4612bea565b8180600001516001600160ff1b031015604051806060016040528060338152602001613580603391399061221b5760405162461bcd60e51b815260040161052f9190612ee8565b50612224612bea565b83518551611ddf9163ffffffff61275e16565b303b1590565b600054610100900460ff16806122565750612256612237565b80612264575060005460ff16155b6122805760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff161580156122ab576000805460ff1961ff0019909116610100171660011790555b6122b36127a4565b6122bb612825565b80156122cd576000805461ff00191690555b50565b600054610100900460ff16806122e957506122e9612237565b806122f7575060005460ff16155b6123135760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff1615801561233e576000805460ff1961ff0019909116610100171660011790555b6122bb6128ff565b61234e612bea565b612356612bea565b82516000131561236c57825160000381526108b0565b915182525090565b60008183038183128015906123895750838113155b8061239e575060008312801561239e57508381135b6109125760405162461bcd60e51b815260040161052f906133a9565b6123c3846124ec565b6123cb612bea565b6123d58584612536565b905060006123e386846125c3565b905060006060876001600160a01b03166323b872dd60e01b88888660405160240161241093929190612e0a565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161244e9190612dda565b6000604051808303816000865af19150503d806000811461248b576040519150601f19603f3d011682016040523d82523d6000602084013e612490565b606091505b50915091508180156124ba5750805115806124ba5750808060200190518101906124ba9190612cce565b6124d65760405162461bcd60e51b815260040161052f9061315f565b6124e288878587612641565b5050505050505050565b60006124f78261298f565b6001600160a01b038316600090815260cc602052604090205490915081146107fe576001600160a01b0391909116600090815260cc6020526040902055565b61253e612bea565b61091283846001600160a01b03166370a08231856040518263ffffffff1660e01b815260040161256e9190612df6565b60206040518083038186803b15801561258657600080fd5b505afa15801561259a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125be9190612d93565b612a7c565b6000806125cf8461298f565b90506012811061260d576126056125ed82601263ffffffff61208d16565b600a0a6125f985611d1b565b9063ffffffff6126e216565b9150506108b0565b61263961262160128363ffffffff61208d16565b600a0a61262d85611d1b565b9063ffffffff61271c16565b949350505050565b61267461265e6126518685612a7c565b839063ffffffff611de916565b6126688686612536565b9063ffffffff612b0e16565b60000b156126945760405162461bcd60e51b815260040161052f90613367565b50505050565b600061091283836012612b3f565b600061091283836012612b5e565b600081848411156126da5760405162461bcd60e51b815260040161052f9190612ee8565b505050900390565b6000826126f1575060006108b0565b828202828482816126fe57fe5b04146109125760405162461bcd60e51b815260040161052f906131a0565b600061091283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612b7c565b60008282018183128015906127735750838112155b80612788575060008312801561278857508381125b6109125760405162461bcd60e51b815260040161052f90613035565b600054610100900460ff16806127bd57506127bd612237565b806127cb575060005460ff16155b6127e75760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff161580156122bb576000805460ff1961ff00199091166101001716600117905580156122cd576000805461ff001916905550565b600054610100900460ff168061283e575061283e612237565b8061284c575060005460ff16155b6128685760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff16158015612893576000805460ff1961ff0019909116610100171660011790555b600061289d611d1f565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156122cd576000805461ff001916905550565b600054610100900460ff16806129185750612918612237565b80612926575060005460ff16155b6129425760405162461bcd60e51b815260040161052f9061325a565b600054610100900460ff1615801561296d576000805460ff1961ff0019909116610100171660011790555b610131805460ff1916600117905580156122cd576000805461ff001916905550565b6001600160a01b038116600090815260cc6020526040812054806108b05760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290516000916060916001600160a01b038716916129f191612dda565b600060405180830381855afa9150503d8060008114612a2c576040519150601f19603f3d011682016040523d82523d6000602084013e612a31565b606091505b5091509150818015612a435750805115155b612a5f5760405162461bcd60e51b815260040161052f906130e9565b80806020019051810190612a739190612d93565b95945050505050565b612a84612bea565b6000612a8f8461298f565b905060128110612ad457604080516020810190915280612ac9612ab984601263ffffffff61208d16565b8690600a0a63ffffffff61271c16565b8152509150506108b0565b604080516020810190915280612b04612af460128563ffffffff61208d16565b8690600a0a63ffffffff6126e216565b9052949350505050565b805182516000911015612b23575060016108b0565b815183511015612b3657506000196108b0565b50600092915050565b60006126398361262d612b5185612bb3565b879063ffffffff6126e216565b6000612639612b6c83612bb3565b61262d868663ffffffff6126e216565b60008183612b9d5760405162461bcd60e51b815260040161052f9190612ee8565b506000838581612ba957fe5b0495945050505050565b60ff16600a0a90565b6040518060600160405280600015158152602001612bd8612bea565b8152602001612be5612bea565b905290565b6040518060200160405280600081525090565b604051806040016040528060006001600160a01b03168152602001612be5612bea565b600060208284031215612c31578081fd5b50919050565b600060208284031215612c48578081fd5b81356109128161356a565b60008060008060808587031215612c68578283fd5b8435612c738161356a565b93506020850135612c838161356a565b92506040850135612c938161356a565b9396929550929360600135925050565b60008060408385031215612cb5578182fd5b8235612cc08161356a565b946020939093013593505050565b600060208284031215612cdf578081fd5b81518015158114610912578182fd5b60008060408385031215612d00578182fd5b8235612d0b8161356a565b9150612d1a8460208501612c20565b90509250929050565b600060208284031215612d34578081fd5b6109128383612c20565b600060208284031215612d4f578081fd5b6040516020810181811067ffffffffffffffff82111715612d6e578283fd5b6040529135825250919050565b600060208284031215612d8c578081fd5b5035919050565b600060208284031215612da4578081fd5b5051919050565b60008060408385031215612dbd578182fd5b823591506020830135612dcf8161356a565b809150509250929050565b60008251612dec81846020870161353e565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b602080825282518282018190526000919060409081850190868401855b82811015612eb457815180516001600160a01b0316855286015151868501529284019290850190600101612e85565b5091979650505050505050565b901515815260200190565b9315158452915160208401526040830152606082015260800190565b6000602082528251806020840152612f0781604085016020870161353e565b601f01601f19169190910160400192915050565b6020808252601b908201527f5374616b65206d6f7265207468616e20616c6c2062616c616e63650000000000604082015260600190565b6020808252601d908201527f446563696d616c45524332303a207472616e73666572206661696c6564000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260149082015273496e70757420616d6f756e74206973207a65726f60601b604082015260600190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a2073616d652061732063616040820152666e64696461746560c81b606082015260800190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526027908201527f5065727046694f776e61626c65557067726164653a206e6f7420746865206e656040820152663b9037bbb732b960c91b606082015260800190565b6020808252601290820152714e6f7420656e6f7567682062616c616e636560701b604082015260600190565b60208082526021908201527f446563696d616c45524332303a2067657420646563696d616c73206661696c656040820152601960fa1b606082015260800190565b6020808252818101527f556e7374616b65206d6f7265207468616e206c6f636b65642062616c616e6365604082015260600190565b60208082526021908201527f446563696d616c45524332303a207472616e7366657246726f6d206661696c656040820152601960fa1b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526017908201527f6e6f2076657374656420726577617264206f7220666565000000000000000000604082015260600190565b60208082526022908201527f5065727046694f776e61626c65557067726164653a207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600c908201526b10b332b2a737ba34b334b2b960a11b604082015260600190565b6020808252601190820152700616d6f756e742063616e2774206265203607c1b604082015260600190565b6020808252601b908201527f504552502072657761726420686173206e6f7420737461727465640000000000604082015260600190565b60208082526018908201527f6f6e6c792072657761726473446973747269627574696f6e0000000000000000604082015260600190565b60208082526022908201527f446563696d616c45524332303a2062616c616e636520696e636f6e73697374656040820152611b9d60f21b606082015260800190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f766572604082015263666c6f7760e01b606082015260800190565b6020808252602f908201527f5065727046694f776e61626c65557067726164653a2063616e6469646174652060408201526e6973207a65726f206164647265737360881b606082015260800190565b6020808252602d908201527f5065727046694f776e61626c65557067726164653a2063616c6c65722069732060408201526c3737ba103a34329037bbb732b960991b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526026908201527f5065727046694f776e61626c65557067726164653a2073616d65206173206f726040820152651a59da5b985b60d21b606082015260800190565b8151151581526020808301515190820152604091820151519181019190915260600190565b9051815260200190565b90815260200190565b60005b83811015613559578181015183820152602001613541565b838111156126945750506000910152565b6001600160a01b03811681146122cd57600080fdfe4d69786564446563696d616c3a2075696e742076616c756520697320626967676572207468616e205f494e543235365f4d4158a264697066735822122096bcaf1b1eb6c71a6193ba1bf81284a70855e581f24769ebd15f9769d77e7ba664736f6c63430006090033";
