/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DecimalERC20FakeInterface extends ethers.utils.Interface {
  functions: {
    "allowance(address,address,address)": FunctionFragment;
    "approve(address,address,tuple)": FunctionFragment;
    "balanceOf(address,address)": FunctionFragment;
    "transfer(address,address,tuple)": FunctionFragment;
    "transferFrom(address,address,address,tuple)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "allowance",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, string, { d: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transfer",
    values: [string, string, { d: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, string, { d: BigNumberish }]
  ): string;

  decodeFunctionResult(functionFragment: "allowance", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "transfer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;

  events: {};
}

export class DecimalERC20Fake extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DecimalERC20FakeInterface;

  functions: {
    allowance(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber] & { d: BigNumber }]>;

    "allowance(address,address,address)"(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber] & { d: BigNumber }]>;

    approve(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,address,tuple)"(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber] & { d: BigNumber }]>;

    "balanceOf(address,address)"(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber] & { d: BigNumber }]>;

    transfer(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transfer(address,address,tuple)"(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,address,tuple)"(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  allowance(
    _token: string,
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber] & { d: BigNumber }>;

  "allowance(address,address,address)"(
    _token: string,
    _owner: string,
    _spender: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber] & { d: BigNumber }>;

  approve(
    _token: string,
    _spender: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,address,tuple)"(
    _token: string,
    _spender: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(
    _token: string,
    _owner: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber] & { d: BigNumber }>;

  "balanceOf(address,address)"(
    _token: string,
    _owner: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber] & { d: BigNumber }>;

  transfer(
    _token: string,
    _receiver: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transfer(address,address,tuple)"(
    _token: string,
    _receiver: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferFrom(
    _token: string,
    _sender: string,
    _receiver: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,address,tuple)"(
    _token: string,
    _sender: string,
    _receiver: string,
    _amount: { d: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    allowance(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { d: BigNumber }>;

    "allowance(address,address,address)"(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { d: BigNumber }>;

    approve(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "approve(address,address,tuple)"(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { d: BigNumber }>;

    "balanceOf(address,address)"(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { d: BigNumber }>;

    transfer(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "transfer(address,address,tuple)"(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    transferFrom(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFrom(address,address,address,tuple)"(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    allowance(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allowance(address,address,address)"(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,address,tuple)"(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,address)"(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transfer(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transfer(address,address,tuple)"(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,address,tuple)"(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    allowance(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allowance(address,address,address)"(
      _token: string,
      _owner: string,
      _spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,address,tuple)"(
      _token: string,
      _spender: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address,address)"(
      _token: string,
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transfer(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transfer(address,address,tuple)"(
      _token: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,address,tuple)"(
      _token: string,
      _sender: string,
      _receiver: string,
      _amount: { d: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
